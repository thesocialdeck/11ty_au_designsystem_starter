"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.AUcardTitle=exports.AUcardFooter=exports.AUcardLink=exports.AUcardDivider=exports.AUcardImage=exports.AUcardHeader=exports.AUcardInner=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * The card  component
 *
 * @param {string}   link               - The link that clicking the card goes to
 * @param {bool}     shadow             - Adds a box shadow to card if true
 * @param {bool}     centred            - Aligns all text to center if true
 * @param {bool}     clickable          - Aligns all text to center if true
 * @param {bool}     dark               - Dark theme variation
 * @param {bool}     alt                - Light theme variation
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUcard=function AUcard(_ref){var link=_ref.link,shadow=_ref.shadow,centred=_ref.centred,dark=_ref.dark,alt=_ref.alt,clickable=_ref.clickable,className=_ref.className,children=_ref.children,attributesOptions=_objectWithoutProperties(_ref,["link","shadow","centred","dark","alt","clickable","className","children"]);var CardContainer="div";if(link!==undefined){CardContainer="a";attributesOptions.href=link}var cardTheme="";if(dark||alt){cardTheme="au-body ".concat(dark?"au-body--dark":""," ").concat(alt?"au-body--alt":"")}return _react["default"].createElement(CardContainer,_extends({className:"au-card ".concat(className," ").concat(cardTheme)+"".concat(shadow?"au-card--shadow":""," ")+"".concat(centred?"au-card--centred":""," ")+"".concat(clickable?"au-card--clickable":"")},attributesOptions),children)};AUcard.propTypes={link:_propTypes["default"].string,dark:_propTypes["default"].bool,alt:_propTypes["default"].bool,shadow:_propTypes["default"].bool,centred:_propTypes["default"].bool,className:_propTypes["default"].string};AUcard.defaultProps={shadow:false,centred:false,clickable:false,dark:false,alt:false,className:""};/**
 * An inner container for the card, with padding of 1 rem
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUcardInner=function AUcardInner(_ref2){var className=_ref2.className,children=_ref2.children,attributesOptions=_objectWithoutProperties(_ref2,["className","children"]);return _react["default"].createElement("div",_extends({className:"au-card__inner ".concat(className)},attributesOptions),children)};exports.AUcardInner=AUcardInner;AUcardInner.propTypes={className:_propTypes["default"].string};AUcardInner.defaultProps={className:""/**
 * An inner container for the card, with padding of 1 rem
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */};var AUcardHeader=function AUcardHeader(_ref3){var className=_ref3.className,level=_ref3.level,alt=_ref3.alt,dark=_ref3.dark,children=_ref3.children,attributesOptions=_objectWithoutProperties(_ref3,["className","level","alt","dark","children"]);var headerTheme="";if(dark||alt){headerTheme="au-body ".concat(dark?"au-body--dark":""," ").concat(alt?"au-body--alt":"")};if(level){var HeadingTag="h".concat(level);return _react["default"].createElement("div",_extends({className:headerTheme},attributesOptions),_react["default"].createElement(HeadingTag,{className:"au-card__header"},children))}else{return _react["default"].createElement("div",_extends({className:"au-card__header ".concat(headerTheme," ").concat(className)},attributesOptions),children)}};exports.AUcardHeader=AUcardHeader;AUcardHeader.propTypes={className:_propTypes["default"].string,dark:_propTypes["default"].bool,alt:_propTypes["default"].bool,level:_propTypes["default"].oneOf(["1","2","3","4","5","6"])};AUcardHeader.defaultProps={className:"",dark:false,alt:false/**
 * An image inside the card
 * @param {string}   src                - Image source
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */};var AUcardImage=function AUcardImage(_ref4){var src=_ref4.src,className=_ref4.className,attributesOptions=_objectWithoutProperties(_ref4,["src","className"]);return _react["default"].createElement("img",_extends({className:"au-card__image ".concat(className),src:src},attributesOptions))};exports.AUcardImage=AUcardImage;AUcardImage.propTypes={src:_propTypes["default"].string.isRequired,className:_propTypes["default"].string};AUcardImage.defaultProps={className:""};/**
 * A horizontal rule used to divide content inside the card
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUcardDivider=function AUcardDivider(_ref5){var className=_ref5.className,attributesOptions=_objectWithoutProperties(_ref5,["className"]);return _react["default"].createElement("hr",_extends({className:"au-card__divider ".concat(className)},attributesOptions))};exports.AUcardDivider=AUcardDivider;AUcardDivider.propTypes={className:_propTypes["default"].string};AUcardDivider.defaultProps={className:""};/**
 * Use when making the entire click area of card clickable.
 * @param {string}   link               - The location of the link
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUcardLink=function AUcardLink(_ref6){var link=_ref6.link,text=_ref6.text,className=_ref6.className,attributesOptions=_objectWithoutProperties(_ref6,["link","text","className"]);return _react["default"].createElement("a",_extends({href:link,className:"au-card--clickable__link ".concat(className)},attributesOptions),text)};exports.AUcardLink=AUcardLink;AUcardLink.propTypes={link:_propTypes["default"].string.isRequired,text:_propTypes["default"].string.isRequired,className:_propTypes["default"].string};AUcardLink.defaultProps={className:""};/**
 * The footer section of the card
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUcardFooter=function AUcardFooter(_ref7){var dark=_ref7.dark,alt=_ref7.alt,children=_ref7.children,className=_ref7.className,attributesOptions=_objectWithoutProperties(_ref7,["dark","alt","children","className"]);var footerTheme="";if(dark||alt){footerTheme="au-body ".concat(dark?"au-body--dark":""," ").concat(alt?"au-body--alt":"")};return _react["default"].createElement("div",_extends({className:"au-card__footer ".concat(footerTheme," ").concat(className)},attributesOptions),children)};exports.AUcardFooter=AUcardFooter;AUcardFooter.propTypes={className:_propTypes["default"].string,dark:_propTypes["default"].bool,alt:_propTypes["default"].bool};AUcardFooter.defaultProps={className:"",dark:false,alt:false/**
 * The footer section of the card
 * @param {string}   level              - The tag level (<h1/> <h2/> etc)
 * @param {string}   className          - An additional class, optional
 * @param {object}   attributeOptions   - Default HTML attributes
 */};var AUcardTitle=function AUcardTitle(_ref8){var children=_ref8.children,className=_ref8.className,level=_ref8.level,attributeOptions=_objectWithoutProperties(_ref8,["children","className","level"]);var HeadingTag="h".concat(level);return _react["default"].createElement(HeadingTag,_extends({className:"au-card__title ".concat(className)},attributeOptions),children)};exports.AUcardTitle=AUcardTitle;AUcardTitle.propTypes={level:_propTypes["default"].oneOf(["1","2","3","4","5","6"]).isRequired,className:_propTypes["default"].string};AUcardTitle.defaultProps={className:""};var _default=AUcard;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,