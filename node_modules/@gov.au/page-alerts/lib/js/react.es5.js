"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * All different kind of alerts
 *
 * @type {Object}
 */var options={info:"au-page-alerts--info",warning:"au-page-alerts--warning",error:"au-page-alerts--error",success:"au-page-alerts--success"};/**
 * DEFAULT
 * Page alert
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  as               - What kind of alert this is, takes: 'info', 'warning', 'error', 'success'
 * @param  {node}    children         - Anything inside the component
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUpageAlert=function AUpageAlert(_ref){var as=_ref.as,alt=_ref.alt,dark=_ref.dark,children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["as","alt","dark","children","className"]);return _react.default.createElement("div",_extends({className:"au-body au-page-alerts ".concat(className," ").concat(dark?" au-page-alerts--dark au-body--dark":"").concat(alt?" au-page-alerts--alt au-body--alt":""," ").concat(options[as])},attributeOptions),children)};AUpageAlert.propTypes={as:_propTypes.default.oneOf(["info","warning","error","success"]).isRequired,alt:_propTypes.default.bool,dark:_propTypes.default.bool,children:_propTypes.default.node.isRequired,className:_propTypes.default.string};var _default=AUpageAlert;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJvcHRpb25zIiwiaW5mbyIsIndhcm5pbmciLCJlcnJvciIsInN1Y2Nlc3MiLCJBVXBhZ2VBbGVydCIsImFzIiwiYWx0IiwiZGFyayIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mIiwiaXNSZXF1aXJlZCIsImJvb2wiLCJub2RlIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiNkZBU0Esb0RBQ0EsNkRBTUEsNkIsMGlDQUVBOzs7O0dBS0EsR0FBTUEsQ0FBQUEsT0FBTyxDQUFHLENBQ2ZDLElBQUksQ0FBRSxzQkFEUyxDQUVmQyxPQUFPLENBQUUseUJBRk0sQ0FHZkMsS0FBSyxDQUFFLHVCQUhRLENBSWZDLE9BQU8sQ0FBRSx5QkFKTSxDQUFoQixDQVFBOzs7Ozs7Ozs7O0dBV0EsR0FBTUMsQ0FBQUEsV0FBVyxDQUFHLFFBQWRBLENBQUFBLFdBQWMsVUFBR0MsQ0FBQUEsRUFBSCxNQUFHQSxFQUFILENBQU9DLEdBQVAsTUFBT0EsR0FBUCxDQUFZQyxJQUFaLE1BQVlBLElBQVosQ0FBa0JDLFFBQWxCLE1BQWtCQSxRQUFsQixxQkFBNEJDLFNBQTVCLENBQTRCQSxTQUE1Qix5QkFBd0MsRUFBeEMsZ0JBQStDQyxnQkFBL0MsaUZBQ25CLDhDQUNDLFNBQVMsa0NBQTZCRCxTQUE3QixhQUNSRixJQUFJLENBQ0QscUNBREMsQ0FFRCxFQUhLLFNBS1JELEdBQUcsQ0FDQSxtQ0FEQSxDQUVBLEVBUEssYUFRSFAsT0FBTyxDQUFFTSxFQUFGLENBUkosQ0FEVixFQVM4QkssZ0JBVDlCLEVBV0dGLFFBWEgsQ0FEbUIsQ0FBcEIsQ0FnQkFKLFdBQVcsQ0FBQ08sU0FBWixDQUF3QixDQUN2Qk4sRUFBRSxDQUFFTyxtQkFBVUMsS0FBVixDQUFnQixDQUFFLE1BQUYsQ0FBVSxTQUFWLENBQXFCLE9BQXJCLENBQThCLFNBQTlCLENBQWhCLEVBQTJEQyxVQUR4QyxDQUV2QlIsR0FBRyxDQUFFTSxtQkFBVUcsSUFGUSxDQUd2QlIsSUFBSSxDQUFFSyxtQkFBVUcsSUFITyxDQUl2QlAsUUFBUSxDQUFFSSxtQkFBVUksSUFBVixDQUFlRixVQUpGLENBS3ZCTCxTQUFTLENBQUVHLG1CQUFVSyxNQUxFLENBQXhCLEMsYUFRZWIsVyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L3BhZ2UtYWxlcnRzIHYyLjEuMyAqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICpcbiAqIFBhZ2UgYWxlcnQgZnVuY3Rpb25cbiAqXG4gKiBVc2UgcGFnZSBhbGVydCB0byBub3RpZnkgYW5kIGFsZXJ0IHVzZXJzIG9mIGltcG9ydGFudCBhcHBsaWNhdGlvbiBldmVudHMuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cbi8qKlxuICogQWxsIGRpZmZlcmVudCBraW5kIG9mIGFsZXJ0c1xuICpcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbmNvbnN0IG9wdGlvbnMgPSB7XG5cdGluZm86ICdhdS1wYWdlLWFsZXJ0cy0taW5mbycsXG5cdHdhcm5pbmc6ICdhdS1wYWdlLWFsZXJ0cy0td2FybmluZycsXG5cdGVycm9yOiAnYXUtcGFnZS1hbGVydHMtLWVycm9yJyxcblx0c3VjY2VzczogJ2F1LXBhZ2UtYWxlcnRzLS1zdWNjZXNzJyxcbn07XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBQYWdlIGFsZXJ0XG4gKlxuICogQHBhcmFtICB7Ym9vbGVhbn0gZGFyayAgICAgICAgICAgICAtIEFkZCB0aGUgZGFyayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtib29sZWFufSBhbHQgICAgICAgICAgICAgIC0gQWRkIHRoZSBhbHQgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7c3RyaW5nfSAgYXMgICAgICAgICAgICAgICAtIFdoYXQga2luZCBvZiBhbGVydCB0aGlzIGlzLCB0YWtlczogJ2luZm8nLCAnd2FybmluZycsICdlcnJvcicsICdzdWNjZXNzJ1xuICogQHBhcmFtICB7bm9kZX0gICAgY2hpbGRyZW4gICAgICAgICAtIEFueXRoaW5nIGluc2lkZSB0aGUgY29tcG9uZW50XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVwYWdlQWxlcnQgPSAoeyBhcywgYWx0LCBkYXJrLCBjaGlsZHJlbiwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4gKFxuXHQ8ZGl2XG5cdFx0Y2xhc3NOYW1lPXtgYXUtYm9keSBhdS1wYWdlLWFsZXJ0cyAkeyBjbGFzc05hbWUgfSAke1xuXHRcdFx0ZGFya1xuXHRcdFx0XHQ/ICcgYXUtcGFnZS1hbGVydHMtLWRhcmsgYXUtYm9keS0tZGFyaydcblx0XHRcdFx0OiAnJ1xuXHRcdFx0fSR7XG5cdFx0XHRhbHRcblx0XHRcdFx0PyAnIGF1LXBhZ2UtYWxlcnRzLS1hbHQgYXUtYm9keS0tYWx0J1xuXHRcdFx0XHQ6ICcnXG5cdFx0XHR9ICR7IG9wdGlvbnNbIGFzIF0gfWB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9XG5cdD5cblx0XHR7IGNoaWxkcmVuIH1cblx0PC9kaXY+XG4pO1xuXG5BVXBhZ2VBbGVydC5wcm9wVHlwZXMgPSB7XG5cdGFzOiBQcm9wVHlwZXMub25lT2YoWyAnaW5mbycsICd3YXJuaW5nJywgJ2Vycm9yJywgJ3N1Y2Nlc3MnIF0pLmlzUmVxdWlyZWQsXG5cdGFsdDogUHJvcFR5cGVzLmJvb2wsXG5cdGRhcms6IFByb3BUeXBlcy5ib29sLFxuXHRjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUuaXNSZXF1aXJlZCxcblx0Y2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVwYWdlQWxlcnQ7XG4iXX0=