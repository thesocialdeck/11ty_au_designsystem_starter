"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=exports.AUtableResponsiveWrapper=exports.AUtableCaption=exports.AUtableRow=exports.AUtableCell=exports.AUtableHeader=exports.AUtableHead=exports.AUtableBody=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * The table component
 *
 * @param {string}   caption            - The description or summary of the table.
 * @param {Object[]} headers            - The column headings
 * @param {Object[]} data               - The table data in the body
 * @param {bool}     striped            - Colourise every other table row
 * @param {string}   className          - An additional class, optional
 * @param {bool}     firstCellIsHeader  - If first cell is a header cell or not
 * @param {object}   attributeOptions   - Default HTML attributes
 */var AUtable=function AUtable(_ref){var caption=_ref.caption,headers=_ref.headers,data=_ref.data,striped=_ref.striped,className=_ref.className,firstCellIsHeader=_ref.firstCellIsHeader,attributeOptions=_objectWithoutProperties(_ref,["caption","headers","data","striped","className","firstCellIsHeader"]);return _react["default"].createElement("table",_extends({className:"au-table ".concat(striped?"au-table--striped ":" "," ").concat(className)},attributeOptions),caption&&_react["default"].createElement(AUtableCaption,{tableCaption:caption}),_react["default"].createElement(AUtableHead,null,_react["default"].createElement(AUtableRow,null,headers.map(function(header,index){return _react["default"].createElement(AUtableHeader,{title:header.title,key:index,type:header.type,width:header.width})}))),_react["default"].createElement(AUtableBody,null,data.map(function(row,rowIndex){return _react["default"].createElement(AUtableRow,{key:rowIndex},headers.map(function(header,columnIndex){// check to render first cell in rows as a header or not
if(columnIndex===0&&firstCellIsHeader===true){return _react["default"].createElement(AUtableHeader,{key:columnIndex,scope:"row",title:row[header.key]?row[header.key]:""})}else{return _react["default"].createElement(AUtableCell,{key:columnIndex,data:row[header.key]?row[header.key]:"",type:header.type,render:header.render?header.render(row[header.key],row):null})}}))})))};AUtable.propTypes={caption:_propTypes["default"].string,headers:_propTypes["default"].arrayOf(Object).isRequired,data:_propTypes["default"].arrayOf(Object).isRequired,striped:_propTypes["default"].bool,className:_propTypes["default"].string};AUtable.defaultProps={striped:false,className:""};/**
 * The table body component
 * @param  {string}  className        - An additional class, optional
 * @param {object} attributeOptions - Default HTML attributes
 *
 */var AUtableBody=function AUtableBody(_ref2){var className=_ref2.className,attributeOptions=_objectWithoutProperties(_ref2,["className"]);return _react["default"].createElement("tbody",_extends({className:"au-table__body ".concat(className," ")},attributeOptions))};exports.AUtableBody=AUtableBody;AUtableBody.propTypes={className:_propTypes["default"].string};AUtableBody.defaultProps={className:""};/**
 * The table head component
 * @param {string} className        - An additional class, optional
 * @param {object} attributeOptions - Default HTML attributes
 *
 */var AUtableHead=function AUtableHead(_ref3){var children=_ref3.children,className=_ref3.className,attributeOptions=_objectWithoutProperties(_ref3,["children","className"]);return _react["default"].createElement("thead",_extends({className:"au-table__head ".concat(className)},attributeOptions),children)};exports.AUtableHead=AUtableHead;AUtableHead.propTypes={children:_propTypes["default"].node,className:_propTypes["default"].string};AUtableHead.defaultProps={className:""};/**
 * The table header component
 *
 * @param {string} title            - The title of table header/column
 * @param {string} type             - Type of the header, can be either text or numeric for left or right alignment respectively.
 * @param {string} width            - Width of the header/column
 * @param {string} scope            - Scope of the header, can be 'row' or 'col'
 * @param {string} className        - An additional class, optional
 * @param {object} attributeOptions - Default HTML attributes
 */var AUtableHeader=function AUtableHeader(_ref4){var title=_ref4.title,type=_ref4.type,width=_ref4.width,scope=_ref4.scope,className=_ref4.className,attributeOptions=_objectWithoutProperties(_ref4,["title","type","width","scope","className"]);return _react["default"].createElement("th",_extends({className:"au-table__header ".concat(className)+"".concat(type==="numeric"?" au-table__header--numeric ":" ")+"".concat(width?" au-table__header--width-"+width:" "," "),scope:scope},attributeOptions)," ",title," ")};exports.AUtableHeader=AUtableHeader;AUtableHeader.propTypes={title:_propTypes["default"].string.isRequired,type:_propTypes["default"].oneOf(["text","numeric"]).isRequired,width:_propTypes["default"].oneOf(["10","20","25","33","50","75"]),scope:_propTypes["default"].oneOf(["row","col"]),className:_propTypes["default"].string};AUtableHeader.defaultProps={className:"",scope:"col",type:"text"};/**
 * The data/cell component
 * @param {string} data       - The cell data
 * @param {string} type       - Type of the data, can be either text or numeric for left or right alignment respectively.
 * @param {string} className  - An additional class, optional
 * @param {object} render     - The function for customised rendering on all cells in this column
 * @param {object} attributeOptions - Default HTML attributes
 *
 */var AUtableCell=function AUtableCell(_ref5){var data=_ref5.data,type=_ref5.type,className=_ref5.className,render=_ref5.render,attributeOptions=_objectWithoutProperties(_ref5,["data","type","className","render"]);return _react["default"].createElement("td",_extends({className:"au-table__cell ".concat(className," ").concat(type==="numeric"?"au-table__cell--numeric ":" ")},attributeOptions),render?render:data)};exports.AUtableCell=AUtableCell;AUtableCell.propTypes={data:_propTypes["default"].any,type:_propTypes["default"].oneOf(["text","numeric"]).isRequired,render:_propTypes["default"].any};AUtableCell.defaultProps={className:"",type:"text"};/**
 * The table row component
 * @param {string} className        - An additional class, optional
 * @param {object} attributeOptions - Default HTML attributes
 */var AUtableRow=function AUtableRow(_ref6){var children=_ref6.children,className=_ref6.className,attributeOptions=_objectWithoutProperties(_ref6,["children","className"]);return _react["default"].createElement("tr",_extends({className:"au-table__row ".concat(className)},attributeOptions),children)};exports.AUtableRow=AUtableRow;AUtableRow.defaultProps={className:""};AUtableRow.propTypes={children:_propTypes["default"].node,className:_propTypes["default"].string/**
 * The table caption component
 * @param {string} tableCaption     - The title of the table caption
 * @param {string} className        - An additional class, optional
 * @param {object} attributeOptions - Default HTML attributes
 *
 */};var AUtableCaption=function AUtableCaption(_ref7){var tableCaption=_ref7.tableCaption,className=_ref7.className,attributeOptions=_objectWithoutProperties(_ref7,["tableCaption","className"]);return _react["default"].createElement("caption",_extends({className:"au-table__caption ".concat(className)},attributeOptions),tableCaption)};exports.AUtableCaption=AUtableCaption;AUtableCaption.propTypes={tableCaption:_propTypes["default"].string,className:_propTypes["default"].string};AUtableCaption.defaultProps={className:""};/**
 * Table wrapper for responsive tables with horizontal scrolling on smaller devices
 * @param {node} children
 */var AUtableResponsiveWrapper=function AUtableResponsiveWrapper(_ref8){var children=_ref8.children;return _react["default"].createElement("div",{className:"au-table__wrapper"},children)};exports.AUtableResponsiveWrapper=AUtableResponsiveWrapper;AUtableResponsiveWrapper.propTypes={children:_propTypes["default"].node};var _default=AUtable;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,