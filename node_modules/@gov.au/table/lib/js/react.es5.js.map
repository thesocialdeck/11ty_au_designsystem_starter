{
  "version": 3,
  "sources": [
    "react.es5.js"
  ],
  "names": [
    "AUtable",
    "caption",
    "headers",
    "data",
    "striped",
    "className",
    "firstCellIsHeader",
    "attributeOptions",
    "map",
    "header",
    "index",
    "title",
    "type",
    "width",
    "row",
    "rowIndex",
    "columnIndex",
    "key",
    "render",
    "propTypes",
    "PropTypes",
    "string",
    "arrayOf",
    "Object",
    "isRequired",
    "bool",
    "defaultProps",
    "AUtableBody",
    "AUtableHead",
    "children",
    "node",
    "AUtableHeader",
    "scope",
    "oneOf",
    "AUtableCell",
    "any",
    "AUtableRow",
    "AUtableCaption",
    "tableCaption",
    "AUtableResponsiveWrapper"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*! @gov.au/table v0.2.0 */\n/***************************************************************************************************************************************************************\n *\n * table function\n *\n * Used to display tabular data\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * The table component\n *\n * @param {string}   caption            - The description or summary of the table.\n * @param {Object[]} headers            - The column headings\n * @param {Object[]} data               - The table data in the body\n * @param {bool}     striped            - Colourise every other table row\n * @param {string}   className          - An additional class, optional\n * @param {bool}     firstCellIsHeader  - If first cell is a header cell or not\n * @param {object}   attributeOptions   - Default HTML attributes\n */\nconst AUtable = ({ caption, headers, data, striped, className, firstCellIsHeader, ...attributeOptions }) => {\n\treturn (\n\t<table className={`au-table ${ striped ? 'au-table--striped ' : ' '} ${className}`} { ...attributeOptions }>\n\t\t{caption && <AUtableCaption tableCaption={caption} />}\n\t\t<AUtableHead>\n\t\t<AUtableRow>\n\t\t\t\t{headers.map( ( header, index ) => (\n\t\t\t\t\t<AUtableHeader\n\t\t\t\t\t\ttitle={header.title}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\ttype={header.type}\n\t\t\t\t\t\twidth={header.width}\n\t\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</AUtableRow>\n\t\t</AUtableHead>\n\t\t<AUtableBody>\n\t\t\t\t{ data.map( (row, rowIndex ) => (\n\t\t\t\t\t<AUtableRow key={rowIndex}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theaders.map( (header, columnIndex) => {\n\t\t\t\t\t\t\t\t// check to render first cell in rows as a header or not\n\t\t\t\t\t\t\t\tif( columnIndex === 0 && firstCellIsHeader === true  ) {\n\t\t\t\t\t\t\t\t\treturn (<AUtableHeader key={columnIndex} scope=\"row\" title={row[header.key]? row[header.key] : ''} />)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<AUtableCell\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={columnIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata={row[header.key]? row[header.key] : ''}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={header.type}\n\t\t\t\t\t\t\t\t\t\t\t\t\trender={header.render ? header.render( row[header.key], row ) : null}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t</AUtableRow>\n\t\t\t\t\t\t\t))}\n\t\t</AUtableBody>\n\t</table>\n\t)\n};\n\nAUtable.propTypes = {\n\tcaption: PropTypes.string,\n\theaders: PropTypes.arrayOf( Object ).isRequired,\n\tdata: PropTypes.arrayOf( Object ).isRequired,\n\tstriped: PropTypes.bool,\n\tclassName: PropTypes.string\n};\n\nAUtable.defaultProps = {\n\tstriped: false,\n\tclassName: ''\n};\n\n\n\n/**\n * The table body component\n * @param  {string}  className        - An additional class, optional\n * @param {object} attributeOptions - Default HTML attributes\n *\n */\nexport const AUtableBody = ({ className, ...attributeOptions }) => {\n\treturn (\n\t\t<tbody className={`au-table__body ${className} `} {...attributeOptions}>\n\n\t\t</tbody>\n\t)\n};\n\nAUtableBody.propTypes = {\n\tclassName: PropTypes.string\n};\n\nAUtableBody.defaultProps = {\n\tclassName: ''\n};\n\n\n\n/**\n * The table head component\n * @param {string} className        - An additional class, optional\n * @param {object} attributeOptions - Default HTML attributes\n *\n */\nexport const AUtableHead = ({ children, className, ...attributeOptions }) => {\n\treturn (\n\t\t<thead className={`au-table__head ${className}`} {...attributeOptions}>\n\t\t\t{children}\n\t\t</thead>\n\t)\n};\n\nAUtableHead.propTypes = {\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string\n}\n\nAUtableHead.defaultProps = {\n\tclassName: ''\n};\n\n\n\n/**\n * The table header component\n *\n * @param {string} title            - The title of table header/column\n * @param {string} type             - Type of the header, can be either text or numeric for left or right alignment respectively.\n * @param {string} width            - Width of the header/column\n * @param {string} scope            - Scope of the header, can be 'row' or 'col'\n * @param {string} className        - An additional class, optional\n * @param {object} attributeOptions - Default HTML attributes\n */\nexport const AUtableHeader = ({ title, type, width, scope, className, ...attributeOptions }) => {\nreturn \t<th className={`au-table__header ${className}` +\n\t\t\t\t\t\t`${type === \"numeric\" ? \" au-table__header--numeric \": \" \"}` +\n\t\t\t\t\t\t`${ width ? \" au-table__header--width-\" + width : \" \"} `}\n\t\t\t\t\tscope={scope} {...attributeOptions}> {title} </th>\n};\n\nAUtableHeader.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\ttype: PropTypes.oneOf(['text', 'numeric']).isRequired,\n\twidth: PropTypes.oneOf(['10', '20', '25', '33', '50', '75']),\n\tscope: PropTypes.oneOf(['row', 'col']),\n\tclassName: PropTypes.string\n};\n\nAUtableHeader.defaultProps = {\n\tclassName: '',\n\tscope: 'col',\n\ttype: 'text'\n};\n\n\n\n/**\n * The data/cell component\n * @param {string} data       - The cell data\n * @param {string} type       - Type of the data, can be either text or numeric for left or right alignment respectively.\n * @param {string} className  - An additional class, optional\n * @param {object} render     - The function for customised rendering on all cells in this column\n * @param {object} attributeOptions - Default HTML attributes\n *\n */\nexport const AUtableCell = ( { data, type, className, render,...attributeOptions } ) => {\n\treturn \t<td className={`au-table__cell ${className} ${ type === \"numeric\" ? \"au-table__cell--numeric \": \" \"}`}\n\t\t\t\t\t\t{...attributeOptions}>\n\t\t\t\t\t\t{ render ? render : data}\n\t\t\t\t\t</td>\n};\n\nAUtableCell.propTypes = {\n\tdata: PropTypes.any,\n\ttype: PropTypes.oneOf(['text', 'numeric']).isRequired,\n\trender: PropTypes.any\n};\n\nAUtableCell.defaultProps = {\n\tclassName: '',\n\ttype: 'text'\n};\n\n\n\n/**\n * The table row component\n * @param {string} className        - An additional class, optional\n * @param {object} attributeOptions - Default HTML attributes\n */\nexport const AUtableRow = ( { children, className,...attributeOptions } ) => {\n\treturn <tr className={`au-table__row ${ className }`} { ...attributeOptions }>\n\t\t{children}\n\t</tr>\n};\n\nAUtableRow.defaultProps = {\n\tclassName: ''\n};\n\nAUtableRow.propTypes = {\n\tchildren: PropTypes.node,\n\tclassName: PropTypes.string,\n}\n\n\n\n/**\n * The table caption component\n * @param {string} tableCaption     - The title of the table caption\n * @param {string} className        - An additional class, optional\n * @param {object} attributeOptions - Default HTML attributes\n *\n */\nexport const AUtableCaption = ({ tableCaption, className, ...attributeOptions }) => {\n\treturn (\n\t\t<caption className={`au-table__caption ${className}`} {...attributeOptions}>\n\t\t\t{ tableCaption }\n\t\t</caption>\n\t)\n};\n\nAUtableCaption.propTypes = {\n\ttableCaption: PropTypes.string,\n\tclassName: PropTypes.string\n}\n\nAUtableCaption.defaultProps = {\n\tclassName: ''\n};\n\n\n\n/**\n * Table wrapper for responsive tables with horizontal scrolling on smaller devices\n * @param {node} children\n */\nexport const AUtableResponsiveWrapper = ({ children }) => {\n\treturn (\n\t\t<div className=\"au-table__wrapper\">\n\t\t\t{children}\n\t\t</div>\n\t)\n};\n\nAUtableResponsiveWrapper.propTypes = {\n\tchildren: PropTypes.node\n};\n\n\nexport default AUtable;\n"
  ]
}