"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * DEFAULT
 * The cta link component
 *
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  link             - The link target, if not supplied this will render as a button, optional
 * @param  {string}  text             - The text of the CTA link
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUctaLink=function AUctaLink(_ref){var linkComponent=_ref.linkComponent,dark=_ref.dark,link=_ref.link,text=_ref.text,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["linkComponent","dark","link","text","className"]);var LinkComponent=linkComponent;if(link){// If we are using a normal link
if(LinkComponent==="a"){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==="function"){attributeOptions.to=link}return _react.default.createElement(LinkComponent,_extends({className:"au-cta-link ".concat(className).concat(dark?" au-cta-link--dark":"")},attributeOptions),text)}else{return _react.default.createElement("button",_extends({className:"au-cta-link".concat(dark?" au-cta-link--dark":"")},attributeOptions),text)}};AUctaLink.propTypes={dark:_propTypes.default.bool,link:_propTypes.default.string,text:_propTypes.default.string.isRequired,className:_propTypes.default.string,linkComponent:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func])};AUctaLink.defaultProps={linkComponent:"a"};var _default=AUctaLink;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVWN0YUxpbmsiLCJsaW5rQ29tcG9uZW50IiwiZGFyayIsImxpbmsiLCJ0ZXh0IiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsIkxpbmtDb21wb25lbnQiLCJocmVmIiwidG8iLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJib29sIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9uZU9mVHlwZSIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiXSwibWFwcGluZ3MiOiI2RkFTQSxvREFDQSw2REFNQSw2QiwwaUNBR0E7Ozs7Ozs7Ozs7R0FXQSxHQUFNQSxDQUFBQSxTQUFTLENBQUcsUUFBWkEsQ0FBQUEsU0FBWSxNQUE4RSxJQUEzRUMsQ0FBQUEsYUFBMkUsTUFBM0VBLGFBQTJFLENBQTVEQyxJQUE0RCxNQUE1REEsSUFBNEQsQ0FBdERDLElBQXNELE1BQXREQSxJQUFzRCxDQUFoREMsSUFBZ0QsTUFBaERBLElBQWdELHFCQUExQ0MsU0FBMEMsQ0FBMUNBLFNBQTBDLHlCQUE5QixFQUE4QixnQkFBdkJDLGdCQUF1QixtRkFDL0YsR0FBTUMsQ0FBQUEsYUFBYSxDQUFHTixhQUF0QixDQUVBLEdBQUlFLElBQUosQ0FBVyxDQUNWO0FBQ0EsR0FBSUksYUFBYSxHQUFLLEdBQXRCLENBQTRCLENBQzNCRCxnQkFBZ0IsQ0FBQ0UsSUFBakIsQ0FBd0JMLElBQ3hCLENBQ0Q7QUFIQSxJQUlLLElBQUksTUFBT0ksQ0FBQUEsYUFBUCxHQUF5QixVQUE3QixDQUEwQyxDQUM5Q0QsZ0JBQWdCLENBQUNHLEVBQWpCLENBQXNCTixJQUN0QixDQUVELE1BQ0MsOEJBQUMsYUFBRCxXQUFlLFNBQVMsdUJBQW1CRSxTQUFuQixTQUFpQ0gsSUFBSSxzQkFBMEIsRUFBL0QsQ0FBeEIsRUFBb0dJLGdCQUFwRyxFQUF5SEYsSUFBekgsQ0FFRCxDQWJELElBY0ssQ0FDSixNQUNDLGlEQUFRLFNBQVMsc0JBQWtCRixJQUFJLHNCQUEwQixFQUFoRCxDQUFqQixFQUE4RUksZ0JBQTlFLEVBQW1HRixJQUFuRyxDQUVELENBQ0QsQ0F0QkQsQ0F3QkFKLFNBQVMsQ0FBQ1UsU0FBVixDQUFzQixDQUNyQlIsSUFBSSxDQUFFUyxtQkFBVUMsSUFESyxDQUVyQlQsSUFBSSxDQUFFUSxtQkFBVUUsTUFGSyxDQUdyQlQsSUFBSSxDQUFFTyxtQkFBVUUsTUFBVixDQUFpQkMsVUFIRixDQUlyQlQsU0FBUyxDQUFFTSxtQkFBVUUsTUFKQSxDQUtyQlosYUFBYSxDQUFFVSxtQkFBVUksU0FBVixDQUFvQixDQUFFSixtQkFBVUUsTUFBWixDQUFvQkYsbUJBQVVLLElBQTlCLENBQXBCLENBTE0sQ0FBdEIsQ0FRQWhCLFNBQVMsQ0FBQ2lCLFlBQVYsQ0FBeUIsQ0FDeEJoQixhQUFhLENBQUUsR0FEUyxDQUF6QixDLGFBSWVELFMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGdvdi5hdS9jdGEtbGluayB2Mi4yLjAgKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqXG4gKiBjdGEtbGluayBmdW5jdGlvblxuICpcbiAqIFByb3ZpZGUgYSBzZWUgbW9yZS9hbGwgbGluayB3aGVuIHRoZXJlIGFyZSB0b28gbWFueSBpdGVtcyB0byBzaG93IGluIHRoZSBjdXJyZW50IGNvbnRleHQuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgY3RhIGxpbmsgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgbGlua0NvbXBvbmVudCAgICAtIFRoZSBjb21wb25lbnQgdXNlZCBmb3IgdGhlIGxpbmtcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGRhcmsgICAgICAgICAgICAgLSBBZGQgdGhlIGRhcmsgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7c3RyaW5nfSAgbGluayAgICAgICAgICAgICAtIFRoZSBsaW5rIHRhcmdldCwgaWYgbm90IHN1cHBsaWVkIHRoaXMgd2lsbCByZW5kZXIgYXMgYSBidXR0b24sIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICB0ZXh0ICAgICAgICAgICAgIC0gVGhlIHRleHQgb2YgdGhlIENUQSBsaW5rXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVjdGFMaW5rID0gKHsgbGlua0NvbXBvbmVudCwgZGFyaywgbGluaywgdGV4dCwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4ge1xuXHRjb25zdCBMaW5rQ29tcG9uZW50ID0gbGlua0NvbXBvbmVudDtcblxuXHRpZiggbGluayApIHtcblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBub3JtYWwgbGlua1xuXHRcdGlmKCBMaW5rQ29tcG9uZW50ID09PSAnYScgKSB7XG5cdFx0XHRhdHRyaWJ1dGVPcHRpb25zLmhyZWYgPSBsaW5rO1xuXHRcdH1cblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBsaW5rIGNvbXBvbmVudFxuXHRcdGVsc2UgaWYoIHR5cGVvZiBMaW5rQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nICkge1xuXHRcdFx0YXR0cmlidXRlT3B0aW9ucy50byA9IGxpbms7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxMaW5rQ29tcG9uZW50IGNsYXNzTmFtZT17IGBhdS1jdGEtbGluayAkeyBjbGFzc05hbWUgfSR7IGRhcmsgPyBgIGF1LWN0YS1saW5rLS1kYXJrYCA6ICcnIH1gIH0geyAuLi5hdHRyaWJ1dGVPcHRpb25zIH0+eyB0ZXh0IH08L0xpbmtDb21wb25lbnQ+XG5cdFx0KTtcblx0fVxuXHRlbHNlIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGJ1dHRvbiBjbGFzc05hbWU9eyBgYXUtY3RhLWxpbmskeyBkYXJrID8gYCBhdS1jdGEtbGluay0tZGFya2AgOiAnJyB9YCB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9idXR0b24+XG5cdFx0KTtcblx0fVxufVxuXG5BVWN0YUxpbmsucHJvcFR5cGVzID0ge1xuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0bGluazogUHJvcFR5cGVzLnN0cmluZyxcblx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdGxpbmtDb21wb25lbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoWyBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYyBdKVxufTtcblxuQVVjdGFMaW5rLmRlZmF1bHRQcm9wcyA9IHtcblx0bGlua0NvbXBvbmVudDogJ2EnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVjdGFMaW5rO1xuIl19