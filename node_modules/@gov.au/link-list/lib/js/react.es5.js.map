{
  "version": 3,
  "sources": [
    "react.es5.js"
  ],
  "names": [
    "AUlinkListItem",
    "text",
    "link",
    "linkComponent",
    "li",
    "children",
    "onClick",
    "attributeOptions",
    "LinkComponent",
    "href",
    "to",
    "propTypes",
    "PropTypes",
    "node",
    "isRequired",
    "string",
    "object",
    "func",
    "oneOfType",
    "defaultProps",
    "AUlinkList",
    "inline",
    "items",
    "className",
    "map",
    "item",
    "i",
    "bool",
    "arrayOf",
    "shape"
  ],
  "mappings": "uHASA,oDACA,6DAMA,6B,4iCAEA;;;;;;;;;GAUO,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAoF,IAAjFC,CAAAA,IAAiF,MAAjFA,IAAiF,CAA3EC,IAA2E,MAA3EA,IAA2E,CAArEC,aAAqE,MAArEA,aAAqE,cAAtDC,EAAsD,CAAtDA,EAAsD,kBAAjD,EAAiD,SAA7CC,QAA6C,MAA7CA,QAA6C,CAAnCC,OAAmC,MAAnCA,OAAmC,CAAvBC,gBAAuB,0FACjH,GAAMC,CAAAA,aAAa,CAAGL,aAAtB,CAEA;AACA,GAAI,MAAOG,CAAAA,OAAP,GAAmB,UAAvB,CAAoC,CACnCC,gBAAgB,CAACD,OAAjB,CAA2BA,OAA3B,CAEA;AACA,GAAI,CAACJ,IAAL,CAAY,CACXA,IAAI,CAAG,GACP,CACD,CAED;AACA,GAAIM,aAAa,GAAK,GAAtB,CAA4B,CAC3BD,gBAAgB,CAACE,IAAjB,CAAwBP,IACxB,CACD;AAHA,IAIK,IAAI,MAAOM,CAAAA,aAAP,GAAyB,UAA7B,CAA0C,CAC9CD,gBAAgB,CAACG,EAAjB,CAAsBR,IACtB,CAED,GAAIA,IAAJ,CAAU,CACT,MACC,sCAASE,EAAT,CACC,gCAAC,aAAD,CAAoBG,gBAApB,CAAyCN,IAAzC,CADD,CAEGI,QAFH,CAKD,CAED,MAAS,sCAASD,EAAT,CAAgBH,IAAhB,CAAwBI,QAAxB,CACT,CAhCM,C,sCAkCPL,cAAc,CAACW,SAAf,CAA2B,CAC1BV,IAAI,CAAEW,sBAAUC,IAAV,CAAeC,UADK,CAE1BZ,IAAI,CAAEU,sBAAUG,MAFU,CAG1BX,EAAE,CAAEQ,sBAAUI,MAHY,CAI1BV,OAAO,CAAEM,sBAAUK,IAJO,CAK1Bd,aAAa,CAAES,sBAAUM,SAAV,CAAoB,CAAEN,sBAAUG,MAAZ,CAAoBH,sBAAUK,IAA9B,CAApB,CALW,CAA3B,CAQAjB,cAAc,CAACmB,YAAf,CAA8B,CAC7BhB,aAAa,CAAE,GADc,CAA9B,CAKA;;;;;;;;GASA,GAAMiB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,WAAGC,CAAAA,MAAH,OAAGA,MAAH,CAAWC,KAAX,OAAWA,KAAX,CAAkBnB,aAAlB,OAAkBA,aAAlB,uBAAiCoB,SAAjC,CAAiCA,SAAjC,0BAA6C,EAA7C,iBAAoDhB,gBAApD,sFAClB,gDAAI,SAAS,wBAAoBgB,SAApB,SAAkCF,MAAM,CAAG,uBAAH,CAA6B,EAArE,CAAb,EAA+Fd,gBAA/F,EAEEe,KAAK,CAACE,GAAN,CACC,SAAEC,IAAF,CAAQC,CAAR,QAAe,iCAAC,cAAD,WAAgB,aAAa,CAAGvB,aAAhC,CAAgD,GAAG,CAAGuB,CAAtD,EAA+DD,IAA/D,EAAf,CADD,CAFF,CADkB,CAAnB,CAUAL,UAAU,CAACT,SAAX,CAAuB,CACtBU,MAAM,CAAET,sBAAUe,IADI,CAEtBL,KAAK,CAAEV,sBAAUgB,OAAV,CACNhB,sBAAUiB,KAAV,CAAgB,CACf3B,IAAI,CAAEU,sBAAUG,MADD,CAEfd,IAAI,CAAEW,sBAAUC,IAAV,CAAeC,UAFN,CAGfV,EAAE,CAAEQ,sBAAUI,MAHC,CAAhB,CADM,EAMLF,UARoB,CAStBX,aAAa,CAAES,sBAAUM,SAAV,CAAoB,CAAEN,sBAAUG,MAAZ,CAAoBH,sBAAUK,IAA9B,CAApB,CATO,CAAvB,CAYAG,UAAU,CAACD,YAAX,CAA0B,CACzBhB,aAAa,CAAE,GADU,CAA1B,C,aAKeiB,U",
  "sourcesContent": [
    "/*! @gov.au/link-list v3.0.8 */\n/***************************************************************************************************************************************************************\n *\n * link-lists function\n *\n * A simple list of inline links.\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\nimport '../css/styles.css';\n\n/**\n * An item inside the AUlinkList component\n *\n * @param  {node}   text             - The link Text or link html\n * @param  {string} link             - The link URL, optional\n * @param  {string} linkComponent    - The component used for the link\n * @param  {object} li               - An additional object to be spread into the wrapping element, optional\n * @param  {object} onClick          - The onClick event handler\n * @param  {object} attributeOptions - Any other attribute options, optional\n */\nexport const AUlinkListItem = ({ text, link, linkComponent, li = {}, children, onClick, ...attributeOptions }) => {\n\tconst LinkComponent = linkComponent;\n\n\t// If there is no link provided and an onClick function\n\tif( typeof onClick === 'function' ) {\n\t\tattributeOptions.onClick = onClick;\n\n\t\t// if we find an onClick event but no link we make it a link so onClick can be added (no button support yet)\n\t\tif( !link ) {\n\t\t\tlink = '#';\n\t\t}\n\t}\n\n\t// If we are using a normal link\n\tif( LinkComponent === 'a' ) {\n\t\tattributeOptions.href = link;\n\t}\n\t// If we are using a link component\n\telse if( typeof LinkComponent === 'function' ) {\n\t\tattributeOptions.to = link;\n\t}\n\n\tif( link ){\n\t\treturn (\n\t\t\t<li { ...li }>\n\t\t\t\t<LinkComponent { ...attributeOptions }>{ text }</LinkComponent>\n\t\t\t\t{ children }\n\t\t\t</li>\n\t\t)\n\t}\n\n\treturn ( <li { ...li }>{ text }{ children }</li> );\n};\n\nAUlinkListItem.propTypes = {\n\ttext: PropTypes.node.isRequired,\n\tlink: PropTypes.string,\n\tli: PropTypes.object,\n\tonClick: PropTypes.func,\n\tlinkComponent: PropTypes.oneOfType([ PropTypes.string, PropTypes.func ])\n};\n\nAUlinkListItem.defaultProps = {\n\tlinkComponent: \"a\",\n};\n\n\n/**\n * DEFAULT\n * The Link List component\n *\n * @param  {array}   items            - All items inside the link list to be passed to AUlinkListItem, format: { link: '', text: '', onClick: () }\n * @param  {string}  className        - An additional class, optional\n * @param  {string}  linkComponent    - The component used for the link\n * @param  {object}  attributeOptions - Any other attribute options, optional\n */\nconst AUlinkList = ({ inline, items, linkComponent, className = '', ...attributeOptions }) => (\n\t<ul className={ `au-link-list ${ className }${ inline ? ' au-link-list--inline' : '' }` } { ...attributeOptions }>\n\t\t{\n\t\t\titems.map(\n\t\t\t\t( item, i ) => <AUlinkListItem linkComponent={ linkComponent } key={ i } { ...item } />\n\t\t\t)\n\t\t}\n\t</ul>\n);\n\nAUlinkList.propTypes = {\n\tinline: PropTypes.bool,\n\titems: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlink: PropTypes.string,\n\t\t\ttext: PropTypes.node.isRequired,\n\t\t\tli: PropTypes.object,\n\t\t})\n\t).isRequired,\n\tlinkComponent: PropTypes.oneOfType([ PropTypes.string, PropTypes.func ])\n};\n\nAUlinkList.defaultProps = {\n\tlinkComponent: \"a\",\n};\n\n\nexport default AUlinkList;\n"
  ]
}