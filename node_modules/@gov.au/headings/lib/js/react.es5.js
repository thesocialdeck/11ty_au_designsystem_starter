"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * All heading options
 *
 * @type {Array}
 */var sizes=["au-display-xs","au-display-sm","au-display-md","au-display-lg","au-display-xl","au-display-xxl","au-display-xxxl"];/**
 * DEFAULT
 * The headings component
 *
 * @param  {string} level            - The tag level (<h1/> <h2/> etc)
 * @param  {string} size             - The headings size
 * @param  {string} children         - Anything inside
 * @param  {string} className        - An additional class, optional
 * @param  {object} attributeOptions - Any other attribute options
 */var AUheading=function AUheading(_ref){var level=_ref.level,size=_ref.size,children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["level","size","children","className"]);var HeadingTag="h".concat(level);return _react.default.createElement(HeadingTag,_extends({className:"au-display-".concat(size," ").concat(className)},attributeOptions),children)};AUheading.propTypes={level:_propTypes.default.oneOf(["1","2","3","4","5","6"]).isRequired,size:_propTypes.default.oneOf(["xs","sm","md","lg","xl","xxl","xxxl"]).isRequired,children:_propTypes.default.node.isRequired,className:_propTypes.default.string};var _default=AUheading;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJzaXplcyIsIkFVaGVhZGluZyIsImxldmVsIiwic2l6ZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsIkhlYWRpbmdUYWciLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvbmVPZiIsImlzUmVxdWlyZWQiLCJub2RlIiwic3RyaW5nIl0sIm1hcHBpbmdzIjoiNkZBU0Esb0RBQ0EsNkRBTUEsNkIsMGlDQUVBOzs7O0dBS0EsR0FBTUEsQ0FBQUEsS0FBSyxDQUFHLENBQ2IsZUFEYSxDQUViLGVBRmEsQ0FHYixlQUhhLENBSWIsZUFKYSxDQUtiLGVBTGEsQ0FNYixnQkFOYSxDQU9iLGlCQVBhLENBQWQsQ0FXQTs7Ozs7Ozs7O0dBVUEsR0FBTUMsQ0FBQUEsU0FBUyxDQUFHLFFBQVpBLENBQUFBLFNBQVksTUFBb0UsSUFBakVDLENBQUFBLEtBQWlFLE1BQWpFQSxLQUFpRSxDQUExREMsSUFBMEQsTUFBMURBLElBQTBELENBQXBEQyxRQUFvRCxNQUFwREEsUUFBb0QscUJBQTFDQyxTQUEwQyxDQUExQ0EsU0FBMEMseUJBQTlCLEVBQThCLGdCQUF2QkMsZ0JBQXVCLHdFQUNyRixHQUFNQyxDQUFBQSxVQUFVLFlBQVFMLEtBQVIsQ0FBaEIsQ0FFQSxNQUNDLDhCQUFDLFVBQUQsV0FBWSxTQUFTLHNCQUFrQkMsSUFBbEIsYUFBNEJFLFNBQTVCLENBQXJCLEVBQXFFQyxnQkFBckUsRUFBMEZGLFFBQTFGLENBRUQsQ0FORCxDQVFBSCxTQUFTLENBQUNPLFNBQVYsQ0FBc0IsQ0FDckJOLEtBQUssQ0FBRU8sbUJBQVVDLEtBQVYsQ0FBZ0IsQ0FBRSxHQUFGLENBQU8sR0FBUCxDQUFZLEdBQVosQ0FBaUIsR0FBakIsQ0FBc0IsR0FBdEIsQ0FBMkIsR0FBM0IsQ0FBaEIsRUFBa0RDLFVBRHBDLENBRXJCUixJQUFJLENBQUVNLG1CQUFVQyxLQUFWLENBQWdCLENBQUUsSUFBRixDQUFRLElBQVIsQ0FBYyxJQUFkLENBQW9CLElBQXBCLENBQTBCLElBQTFCLENBQWdDLEtBQWhDLENBQXVDLE1BQXZDLENBQWhCLEVBQWlFQyxVQUZsRCxDQUdyQlAsUUFBUSxDQUFFSyxtQkFBVUcsSUFBVixDQUFlRCxVQUhKLENBSXJCTixTQUFTLENBQUVJLG1CQUFVSSxNQUpBLENBQXRCLEMsYUFPZVosUyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L2hlYWRpbmdzIHYyLjAuMTEgKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqXG4gKiBoZWFkaW5ncyBmdW5jdGlvblxuICpcbiAqIENsYXNzIHN0eWxlcyBmb3IgZGlzcGxheSBoZWFkaW5ncy5cbiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5cbi8vIFRoZSBmb2xsb3dpbmcgbGluZSB3aWxsIGJlIHJlcGxhY2VkIGF1dG9tYXRpY2FsbHkgd2l0aCBnZW5lcmljIGltcG9ydHMgZm9yIHRoZSBFUzUgcGlwZWxpbmUuXG4vLyBZb3UgY2FuIHNhZmVseSBpZ25vcmUgdGhpcyBiaXQgaWYgeW91IHVzZSB0aGlzIG1vZHVsZSB3aXRoIHBhbmNha2Vcbi8vXG5pbXBvcnQgJy4uL2Nzcy9zdHlsZXMuY3NzJztcblxuLyoqXG4gKiBBbGwgaGVhZGluZyBvcHRpb25zXG4gKlxuICogQHR5cGUge0FycmF5fVxuICovXG5jb25zdCBzaXplcyA9IFtcblx0J2F1LWRpc3BsYXkteHMnLFxuXHQnYXUtZGlzcGxheS1zbScsXG5cdCdhdS1kaXNwbGF5LW1kJyxcblx0J2F1LWRpc3BsYXktbGcnLFxuXHQnYXUtZGlzcGxheS14bCcsXG5cdCdhdS1kaXNwbGF5LXh4bCcsXG5cdCdhdS1kaXNwbGF5LXh4eGwnLFxuXTtcblxuXG4vKipcbiAqIERFRkFVTFRcbiAqIFRoZSBoZWFkaW5ncyBjb21wb25lbnRcbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGxldmVsICAgICAgICAgICAgLSBUaGUgdGFnIGxldmVsICg8aDEvPiA8aDIvPiBldGMpXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHNpemUgICAgICAgICAgICAgLSBUaGUgaGVhZGluZ3Mgc2l6ZVxuICogQHBhcmFtICB7c3RyaW5nfSBjaGlsZHJlbiAgICAgICAgIC0gQW55dGhpbmcgaW5zaWRlXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGNsYXNzTmFtZSAgICAgICAgLSBBbiBhZGRpdGlvbmFsIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7b2JqZWN0fSBhdHRyaWJ1dGVPcHRpb25zIC0gQW55IG90aGVyIGF0dHJpYnV0ZSBvcHRpb25zXG4gKi9cbmNvbnN0IEFVaGVhZGluZyA9ICh7IGxldmVsLCBzaXplLCBjaGlsZHJlbiwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4ge1xuXHRjb25zdCBIZWFkaW5nVGFnID0gYGgkeyBsZXZlbCB9YDtcblxuXHRyZXR1cm4gKFxuXHRcdDxIZWFkaW5nVGFnIGNsYXNzTmFtZT17IGBhdS1kaXNwbGF5LSR7IHNpemUgfSAkeyBjbGFzc05hbWUgfWAgfSB7IC4uLmF0dHJpYnV0ZU9wdGlvbnMgfT57IGNoaWxkcmVuIH08L0hlYWRpbmdUYWc+XG5cdCk7XG59O1xuXG5BVWhlYWRpbmcucHJvcFR5cGVzID0ge1xuXHRsZXZlbDogUHJvcFR5cGVzLm9uZU9mKFsgJzEnLCAnMicsICczJywgJzQnLCAnNScsICc2JyBdKS5pc1JlcXVpcmVkLFxuXHRzaXplOiBQcm9wVHlwZXMub25lT2YoWyAneHMnLCAnc20nLCAnbWQnLCAnbGcnLCAneGwnLCAneHhsJywgJ3h4eGwnIF0pLmlzUmVxdWlyZWQsXG5cdGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZS5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBVWhlYWRpbmc7XG4iXX0=