"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=exports.AUselectItem=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * An item inside the Select component
 *
 * @param  {string}   text             - The text of this option
 * @param  {string}   value            - The value of this option
 * @param  {object}   attributeOptions - Any other attribute options
 */var AUselectItem=function AUselectItem(_ref){var text=_ref.text,value=_ref.value,attributeOptions=_objectWithoutProperties(_ref,["text","value"]);return _react.default.createElement("option",_extends({value:value},attributeOptions),text)};exports.AUselectItem=AUselectItem;AUselectItem.propTypes={text:_propTypes.default.string.isRequired,value:_propTypes.default.string.isRequired,className:_propTypes.default.string};/**
 * DEFAULT
 * The select component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {array}   options          - The options for the select, format: { value: '', text: '' }
 * @param  {string}  block            - The block option
 * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUselect=function AUselect(_ref2){var dark=_ref2.dark,options=_ref2.options,block=_ref2.block,status=_ref2.status,_ref2$className=_ref2.className,className=_ref2$className===void 0?"":_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,["dark","options","block","status","className"]);return _react.default.createElement("select",_extends({className:"au-select ".concat(className)+"".concat(block?" au-select--block":"")+"".concat(dark?" au-select--dark":"")+"".concat(status==="valid"?" au-select--valid":"")+"".concat(status==="invalid"?" au-select--invalid":"")},attributeOptions),options.map(function(option,i){return _react.default.createElement(AUselectItem,_extends({key:i},option))}))};AUselect.propTypes={dark:_propTypes.default.bool,options:_propTypes.default.arrayOf(_propTypes.default.shape({value:_propTypes.default.string.isRequired,text:_propTypes.default.string.isRequired})).isRequired,block:_propTypes.default.bool,status:_propTypes.default.oneOf(["valid","invalid"]),className:_propTypes.default.string};var _default=AUselect;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVXNlbGVjdEl0ZW0iLCJ0ZXh0IiwidmFsdWUiLCJhdHRyaWJ1dGVPcHRpb25zIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsImNsYXNzTmFtZSIsIkFVc2VsZWN0IiwiZGFyayIsIm9wdGlvbnMiLCJibG9jayIsInN0YXR1cyIsIm1hcCIsIm9wdGlvbiIsImkiLCJib29sIiwiYXJyYXlPZiIsInNoYXBlIiwib25lT2YiXSwibWFwcGluZ3MiOiJrSEFTQSxvREFDQSw2REFNQSw2QiwwaUNBR0E7Ozs7OztHQU9PLEdBQU1BLENBQUFBLFlBQVksQ0FBRyxRQUFmQSxDQUFBQSxZQUFlLFVBQUdDLENBQUFBLElBQUgsTUFBR0EsSUFBSCxDQUFTQyxLQUFULE1BQVNBLEtBQVQsQ0FBbUJDLGdCQUFuQix1REFDM0IsaURBQVEsS0FBSyxDQUFHRCxLQUFoQixFQUE2QkMsZ0JBQTdCLEVBQWtERixJQUFsRCxDQUQyQixDQUFyQixDLGtDQUlQRCxZQUFZLENBQUNJLFNBQWIsQ0FBeUIsQ0FDeEJILElBQUksQ0FBRUksbUJBQVVDLE1BQVYsQ0FBaUJDLFVBREMsQ0FFeEJMLEtBQUssQ0FBRUcsbUJBQVVDLE1BQVYsQ0FBaUJDLFVBRkEsQ0FHeEJDLFNBQVMsQ0FBRUgsbUJBQVVDLE1BSEcsQ0FBekIsQ0FPQTs7Ozs7Ozs7OztHQVdBLEdBQU1HLENBQUFBLFFBQVEsQ0FBRyxRQUFYQSxDQUFBQSxRQUFXLE9BQTJFLElBQXhFQyxDQUFBQSxJQUF3RSxPQUF4RUEsSUFBd0UsQ0FBbEVDLE9BQWtFLE9BQWxFQSxPQUFrRSxDQUF6REMsS0FBeUQsT0FBekRBLEtBQXlELENBQWxEQyxNQUFrRCxPQUFsREEsTUFBa0QsdUJBQTFDTCxTQUEwQyxDQUExQ0EsU0FBMEMsMEJBQTlCLEVBQThCLGlCQUF2QkwsZ0JBQXVCLGlGQUUzRixNQUNDLGlEQUFRLFNBQVMsQ0FDaEIsb0JBQWNLLFNBQWQsWUFDSUksS0FBSyx1QkFEVCxZQUVJRixJQUFJLENBQUcsa0JBQUgsQ0FBd0IsRUFGaEMsWUFHSUcsTUFBTSxHQUFLLE9BQVgsQ0FBcUIsbUJBQXJCLENBQTJDLEVBSC9DLFlBSUlBLE1BQU0sR0FBSyxTQUFYLENBQXVCLHFCQUF2QixDQUErQyxFQUpuRCxDQURELEVBTU9WLGdCQU5QLEVBUUVRLE9BQU8sQ0FBQ0csR0FBUixDQUNDLFNBQUVDLE1BQUYsQ0FBVUMsQ0FBVixRQUFpQiw4QkFBQyxZQUFELFdBQWMsR0FBRyxDQUFHQSxDQUFwQixFQUE2QkQsTUFBN0IsRUFBakIsQ0FERCxDQVJGLENBY0QsQ0FqQkQsQ0FtQkFOLFFBQVEsQ0FBQ0wsU0FBVCxDQUFxQixDQUNwQk0sSUFBSSxDQUFFTCxtQkFBVVksSUFESSxDQUVwQk4sT0FBTyxDQUFFTixtQkFBVWEsT0FBVixDQUNSYixtQkFBVWMsS0FBVixDQUFnQixDQUNmakIsS0FBSyxDQUFFRyxtQkFBVUMsTUFBVixDQUFpQkMsVUFEVCxDQUVmTixJQUFJLENBQUVJLG1CQUFVQyxNQUFWLENBQWlCQyxVQUZSLENBQWhCLENBRFEsRUFLUEEsVUFQa0IsQ0FRcEJLLEtBQUssQ0FBRVAsbUJBQVVZLElBUkcsQ0FTcEJKLE1BQU0sQ0FBRVIsbUJBQVVlLEtBQVYsQ0FBZ0IsQ0FBRSxPQUFGLENBQVcsU0FBWCxDQUFoQixDQVRZLENBVXBCWixTQUFTLENBQUVILG1CQUFVQyxNQVZELENBQXJCLEMsYUFhZUcsUSIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L3NlbGVjdCB2Mi4wLjExICovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKlxuICogc2VsZWN0IGZ1bmN0aW9uXG4gKlxuICogVGhlIGZvcm0gc2VsZWN0IGVsZW1lbnQgZm9yIG11bHRpcGxlIG9wdGlvbnNcbiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5cbi8vIFRoZSBmb2xsb3dpbmcgbGluZSB3aWxsIGJlIHJlcGxhY2VkIGF1dG9tYXRpY2FsbHkgd2l0aCBnZW5lcmljIGltcG9ydHMgZm9yIHRoZSBFUzUgcGlwZWxpbmUuXG4vLyBZb3UgY2FuIHNhZmVseSBpZ25vcmUgdGhpcyBiaXQgaWYgeW91IHVzZSB0aGlzIG1vZHVsZSB3aXRoIHBhbmNha2Vcbi8vXG5pbXBvcnQgJy4uL2Nzcy9zdHlsZXMuY3NzJztcblxuXG4vKipcbiAqIEFuIGl0ZW0gaW5zaWRlIHRoZSBTZWxlY3QgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgIHRleHQgICAgICAgICAgICAgLSBUaGUgdGV4dCBvZiB0aGlzIG9wdGlvblxuICogQHBhcmFtICB7c3RyaW5nfSAgIHZhbHVlICAgICAgICAgICAgLSBUaGUgdmFsdWUgb2YgdGhpcyBvcHRpb25cbiAqIEBwYXJhbSAge29iamVjdH0gICBhdHRyaWJ1dGVPcHRpb25zIC0gQW55IG90aGVyIGF0dHJpYnV0ZSBvcHRpb25zXG4gKi9cbmV4cG9ydCBjb25zdCBBVXNlbGVjdEl0ZW0gPSAoeyB0ZXh0LCB2YWx1ZSwgLi4uYXR0cmlidXRlT3B0aW9ucyB9KSA9PiAoXG5cdDxvcHRpb24gdmFsdWU9eyB2YWx1ZSB9IHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9vcHRpb24+XG4pO1xuXG5BVXNlbGVjdEl0ZW0ucHJvcFR5cGVzID0ge1xuXHR0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG5cdHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG5cdGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgc2VsZWN0IGNvbXBvbmVudFxuICpcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGRhcmsgICAgICAgICAgICAgLSBBZGQgdGhlIGRhcmsgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7YXJyYXl9ICAgb3B0aW9ucyAgICAgICAgICAtIFRoZSBvcHRpb25zIGZvciB0aGUgc2VsZWN0LCBmb3JtYXQ6IHsgdmFsdWU6ICcnLCB0ZXh0OiAnJyB9XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBibG9jayAgICAgICAgICAgIC0gVGhlIGJsb2NrIG9wdGlvblxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RhdHVzICAgICAgICAgICAtIE1hcmsgdGhpcyBmaWVsZCBhcyBlaXRoZXIgJ3ZhbGlkJyBvciAnaW52YWxpZCcsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVzZWxlY3QgPSAoeyBkYXJrLCBvcHRpb25zLCBibG9jaywgc3RhdHVzLCBjbGFzc05hbWUgPSAnJywgLi4uYXR0cmlidXRlT3B0aW9ucyB9KSA9PiB7XG5cblx0cmV0dXJuIChcblx0XHQ8c2VsZWN0IGNsYXNzTmFtZT17XG5cdFx0XHRgYXUtc2VsZWN0ICR7IGNsYXNzTmFtZSB9YCArXG5cdFx0XHRgJHsgYmxvY2sgPyBgIGF1LXNlbGVjdC0tYmxvY2tgIDogYGAgfWAgK1xuXHRcdFx0YCR7IGRhcmsgPyAnIGF1LXNlbGVjdC0tZGFyaycgOiAnJyB9YCArXG5cdFx0XHRgJHsgc3RhdHVzID09PSAndmFsaWQnID8gJyBhdS1zZWxlY3QtLXZhbGlkJyA6ICcnIH1gICtcblx0XHRcdGAkeyBzdGF0dXMgPT09ICdpbnZhbGlkJyA/ICcgYXUtc2VsZWN0LS1pbnZhbGlkJyA6ICcnIH1gXG5cdFx0fSB7IC4uLmF0dHJpYnV0ZU9wdGlvbnMgfT5cblx0XHRcdHtcblx0XHRcdFx0b3B0aW9ucy5tYXAoXG5cdFx0XHRcdFx0KCBvcHRpb24sIGkgKSA9PiA8QVVzZWxlY3RJdGVtIGtleT17IGkgfSB7IC4uLm9wdGlvbiB9IC8+XG5cdFx0XHRcdClcblx0XHRcdH1cblx0XHQ8L3NlbGVjdD5cblx0KTtcbn07XG5cbkFVc2VsZWN0LnByb3BUeXBlcyA9IHtcblx0ZGFyazogUHJvcFR5cGVzLmJvb2wsXG5cdG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKFxuXHRcdFByb3BUeXBlcy5zaGFwZSh7XG5cdFx0XHR2YWx1ZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdFx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdH0pXG5cdCkuaXNSZXF1aXJlZCxcblx0YmxvY2s6IFByb3BUeXBlcy5ib29sLFxuXHRzdGF0dXM6IFByb3BUeXBlcy5vbmVPZihbICd2YWxpZCcsICdpbnZhbGlkJyBdKSxcblx0Y2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVzZWxlY3Q7XG4iXX0=