"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _linkList=_interopRequireDefault(require("@gov.au/link-list"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * DEFAULT
 * The breadcrumbs component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {string}  label            - The aria label of the component
 * @param  {array}   items            - Items inside the breadcrumbs passed on to AUlinkList
 * @param  {string}  linkComponent    - The component used for the link
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUbreadcrumbs=function AUbreadcrumbs(_ref){var dark=_ref.dark,label=_ref.label,items=_ref.items,linkComponent=_ref.linkComponent,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["dark","label","items","linkComponent","className"]);return _react.default.createElement("nav",_extends({className:"au-breadcrumbs ".concat(className).concat(dark?" au-breadcrumbs--dark":""),"aria-label":label},attributeOptions),_react.default.createElement(_linkList.default,{inline:true,linkComponent:linkComponent,items:items}))};AUbreadcrumbs.propTypes={dark:_propTypes.default.bool,label:_propTypes.default.string.isRequired,items:_propTypes.default.arrayOf(_propTypes.default.shape({link:_propTypes.default.string,text:_propTypes.default.string.isRequired})).isRequired,linkComponent:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func])};AUbreadcrumbs.defaultProps={linkComponent:"a"};var _default=AUbreadcrumbs;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVWJyZWFkY3J1bWJzIiwiZGFyayIsImxhYmVsIiwiaXRlbXMiLCJsaW5rQ29tcG9uZW50IiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsImJvb2wiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXlPZiIsInNoYXBlIiwibGluayIsInRleHQiLCJvbmVPZlR5cGUiLCJmdW5jIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiNkZBU0Esb0RBQ0EsNkRBRUEsbUVBT0EsNkIsMGlDQUdBOzs7Ozs7Ozs7O0dBV0EsR0FBTUEsQ0FBQUEsYUFBYSxDQUFHLFFBQWhCQSxDQUFBQSxhQUFnQixVQUFHQyxDQUFBQSxJQUFILE1BQUdBLElBQUgsQ0FBU0MsS0FBVCxNQUFTQSxLQUFULENBQWdCQyxLQUFoQixNQUFnQkEsS0FBaEIsQ0FBdUJDLGFBQXZCLE1BQXVCQSxhQUF2QixxQkFBc0NDLFNBQXRDLENBQXNDQSxTQUF0Qyx5QkFBa0QsRUFBbEQsZ0JBQXlEQyxnQkFBekQsMkZBQ3JCLDhDQUNDLFNBQVMsMEJBQXNCRCxTQUF0QixTQUFvQ0osSUFBSSxDQUFHLHVCQUFILENBQTZCLEVBQXJFLENBRFYsQ0FFQyxhQUFhQyxLQUZkLEVBR01JLGdCQUhOLEVBS0MsNkJBQUMsaUJBQUQsRUFBWSxNQUFNLEtBQWxCLENBQW1CLGFBQWEsQ0FBR0YsYUFBbkMsQ0FBbUQsS0FBSyxDQUFHRCxLQUEzRCxFQUxELENBRHFCLENBQXRCLENBVUFILGFBQWEsQ0FBQ08sU0FBZCxDQUEwQixDQUN6Qk4sSUFBSSxDQUFFTyxtQkFBVUMsSUFEUyxDQUV6QlAsS0FBSyxDQUFFTSxtQkFBVUUsTUFBVixDQUFpQkMsVUFGQyxDQUd6QlIsS0FBSyxDQUFFSyxtQkFBVUksT0FBVixDQUNOSixtQkFBVUssS0FBVixDQUFnQixDQUNmQyxJQUFJLENBQUVOLG1CQUFVRSxNQURELENBRWZLLElBQUksQ0FBRVAsbUJBQVVFLE1BQVYsQ0FBaUJDLFVBRlIsQ0FBaEIsQ0FETSxFQUtMQSxVQVJ1QixDQVN6QlAsYUFBYSxDQUFFSSxtQkFBVVEsU0FBVixDQUFvQixDQUFFUixtQkFBVUUsTUFBWixDQUFvQkYsbUJBQVVTLElBQTlCLENBQXBCLENBVFUsQ0FBMUIsQ0FZQWpCLGFBQWEsQ0FBQ2tCLFlBQWQsQ0FBNkIsQ0FDNUJkLGFBQWEsQ0FBRSxHQURhLENBQTdCLEMsYUFJZUosYSIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L2JyZWFkY3J1bWJzIHYzLjAuNSAqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICpcbiAqIGJyZWFkY3J1bWJzIGZ1bmN0aW9uXG4gKlxuICogQnJlYWRjcnVtYnMgaGVscCB1c2VycyB1bmRlcnN0YW5kIHdoZXJlIHRoZXkgYXJlIGluIHRoZSBzZXJ2aWNlIGFuZCBob3cgdGhleSBnb3QgdGhlcmUuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuaW1wb3J0IEFVbGlua0xpc3QgZnJvbSAnQGdvdi5hdS9saW5rLWxpc3QnO1xuLy8gRVM2IGRlcGVuZGVuY3k6IGltcG9ydCBBVWxpbmtMaXN0IGZyb20gJy4vbGluay1saXN0JztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgYnJlYWRjcnVtYnMgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7Ym9vbGVhbn0gZGFyayAgICAgICAgICAgICAtIEFkZCB0aGUgZGFyayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBsYWJlbCAgICAgICAgICAgIC0gVGhlIGFyaWEgbGFiZWwgb2YgdGhlIGNvbXBvbmVudFxuICogQHBhcmFtICB7YXJyYXl9ICAgaXRlbXMgICAgICAgICAgICAtIEl0ZW1zIGluc2lkZSB0aGUgYnJlYWRjcnVtYnMgcGFzc2VkIG9uIHRvIEFVbGlua0xpc3RcbiAqIEBwYXJhbSAge3N0cmluZ30gIGxpbmtDb21wb25lbnQgICAgLSBUaGUgY29tcG9uZW50IHVzZWQgZm9yIHRoZSBsaW5rXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVVicmVhZGNydW1icyA9ICh7IGRhcmssIGxhYmVsLCBpdGVtcywgbGlua0NvbXBvbmVudCwgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4gKFxuXHQ8bmF2XG5cdFx0Y2xhc3NOYW1lPXsgYGF1LWJyZWFkY3J1bWJzICR7IGNsYXNzTmFtZSB9JHsgZGFyayA/ICcgYXUtYnJlYWRjcnVtYnMtLWRhcmsnIDogJycgfWAgfVxuXHRcdGFyaWEtbGFiZWw9eyBsYWJlbCB9XG5cdFx0eyAuLi5hdHRyaWJ1dGVPcHRpb25zIH1cblx0PlxuXHRcdDxBVWxpbmtMaXN0IGlubGluZSBsaW5rQ29tcG9uZW50PXsgbGlua0NvbXBvbmVudCB9IGl0ZW1zPXsgaXRlbXMgfSAvPlxuXHQ8L25hdj5cbik7XG5cbkFVYnJlYWRjcnVtYnMucHJvcFR5cGVzID0ge1xuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0bGFiZWw6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcblx0aXRlbXM6IFByb3BUeXBlcy5hcnJheU9mKFxuXHRcdFByb3BUeXBlcy5zaGFwZSh7XG5cdFx0XHRsaW5rOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRcdFx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdH0pXG5cdCkuaXNSZXF1aXJlZCxcblx0bGlua0NvbXBvbmVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbIFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jIF0pXG59O1xuXG5BVWJyZWFkY3J1bWJzLmRlZmF1bHRQcm9wcyA9IHtcblx0bGlua0NvbXBvbmVudDogJ2EnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQVVicmVhZGNydW1icztcbiJdfQ==