"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AUradio=exports.AUcheckbox=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * The checkbox component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {boolean} small            - Add the small variation class
 * @param  {boolean} block            - Add the block variation class
 * @param  {string}  label            - The label text
 * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional
 * @param  {string}  id               - The id of the checkbox input
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 *
 */var AUcheckbox=function AUcheckbox(_ref){var dark=_ref.dark,alt=_ref.alt,small=_ref.small,block=_ref.block,label=_ref.label,status=_ref.status,id=_ref.id,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["dark","alt","small","block","label","status","id","className"]);return _react.default.createElement("div",{className:"au-control-input ".concat(className)+"".concat(dark?" au-control-input--dark":"")+"".concat(alt?" au-control-input--alt":"")+"".concat(small?" au-control-input--small":"")+"".concat(block?" au-control-input--block":"")+"".concat(status==="valid"?" au-control-input--valid":"")+"".concat(status==="invalid"?" au-control-input--invalid":"")},_react.default.createElement("input",_extends({className:"au-control-input__input",id:id,type:"checkbox"},attributeOptions)),_react.default.createElement("label",{className:"au-control-input__text",htmlFor:id},label))};exports.AUcheckbox=AUcheckbox;AUcheckbox.propTypes={dark:_propTypes.default.bool,alt:_propTypes.default.bool,small:_propTypes.default.bool,block:_propTypes.default.bool,label:_propTypes.default.string.isRequired,id:_propTypes.default.string.isRequired,status:_propTypes.default.oneOf(["valid","invalid"]),className:_propTypes.default.string};/**
 * The radio component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {boolean} small            - Add the small variation class
 * @param  {boolean} block            - Add the block variation class
 * @param  {string}  label            - The label text
 * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional
 * @param  {string}  id               - The id of the radio input
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUradio=function AUradio(_ref2){var dark=_ref2.dark,alt=_ref2.alt,small=_ref2.small,block=_ref2.block,label=_ref2.label,status=_ref2.status,id=_ref2.id,_ref2$className=_ref2.className,className=_ref2$className===void 0?"":_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,["dark","alt","small","block","label","status","id","className"]);return _react.default.createElement("div",{className:"au-control-input ".concat(className)+"".concat(dark?" au-control-input--dark":"")+"".concat(alt?" au-control-input--alt":"")+"".concat(small?" au-control-input--small":"")+"".concat(block?" au-control-input--block":"")+"".concat(status==="valid"?" au-control-input--valid":"")+"".concat(status==="invalid"?" au-control-input--invalid":"")},_react.default.createElement("input",_extends({className:"au-control-input__input",type:"radio",id:id},attributeOptions)),_react.default.createElement("label",{className:"au-control-input__text",htmlFor:id},label))};exports.AUradio=AUradio;AUradio.propTypes={dark:_propTypes.default.bool,alt:_propTypes.default.bool,small:_propTypes.default.bool,block:_propTypes.default.bool,label:_propTypes.default.string.isRequired,id:_propTypes.default.string.isRequired,status:_propTypes.default.oneOf(["valid","invalid"]),className:_propTypes.default.string};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,