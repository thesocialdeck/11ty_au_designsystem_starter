"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.AUcalloutCalendar=exports.AUcallout=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * Default callout
 *
 * @param  {string}  title            - The title of the header
 * @param  {string}  level            - The tag level (<h1/> <h2/> etc), default: '1'
 * @param  {boolean} srOnlyTitle      - Title is visible to screen readers only
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  children         - Anything inside
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUcallout=function AUcallout(_ref){var title=_ref.title,level=_ref.level,srOnlyTitle=_ref.srOnlyTitle,dark=_ref.dark,alt=_ref.alt,description=_ref.description,children=_ref.children,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["title","level","srOnlyTitle","dark","alt","description","children","className"]);var HeadingTag="h".concat(level);return _react.default.createElement("section",_extends({className:"au-callout ".concat(className).concat(dark?" au-callout--dark":"").concat(alt?" au-callout--alt":"")},attributeOptions),_react.default.createElement(HeadingTag,{children:title,className:"au-callout__heading".concat(srOnlyTitle?" au-callout__heading--sronly":"")}),children)};exports.AUcallout=AUcallout;AUcallout.propTypes={title:_propTypes.default.string.isRequired,level:_propTypes.default.number,srOnlyTitle:_propTypes.default.bool,dark:_propTypes.default.bool,alt:_propTypes.default.bool,children:_propTypes.default.node.isRequired,className:_propTypes.default.string};AUcallout.defaultProps={level:2,srOnlyTitle:false};/**
 * Calendar callout
 *
 * @param  {string}  title            - The title of the header
 * @param  {string}  level            - The tag level (<h1/> <h2/> etc), default: '1'
 * @param  {boolean} srOnlyTitle      - Title is visible to screen readers only
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} alt              - Add the alt variation class, optional
 * @param  {string}  subline          - The subline of the event, optional
 * @param  {string}  datetime         - The datetime of the event as ISO datetime
 * @param  {string}  time             - The time that appears on the page
 * @param  {string}  name             - The name of the event, optional
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUcalloutCalendar=function AUcalloutCalendar(_ref2){var title=_ref2.title,level=_ref2.level,srOnlyTitle=_ref2.srOnlyTitle,dark=_ref2.dark,alt=_ref2.alt,subline=_ref2.subline,datetime=_ref2.datetime,time=_ref2.time,name=_ref2.name,_ref2$className=_ref2.className,className=_ref2$className===void 0?"":_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,["title","level","srOnlyTitle","dark","alt","subline","datetime","time","name","className"]);var HeadingTag="h".concat(level);return _react.default.createElement("section",_extends({className:"au-callout au-callout--calendar-event ".concat(className).concat(dark?" au-callout--dark":"").concat(alt?" au-callout--alt":"")},attributeOptions),_react.default.createElement(HeadingTag,{children:title,className:"au-callout__heading".concat(srOnlyTitle?" au-callout__heading--sronly":"")}),subline&&_react.default.createElement("p",{className:"au-callout--calendar-event__lede"},subline),_react.default.createElement("time",{className:"au-callout--calendar-event__time",dateTime:new Date(datetime).toJSON()},time),name&&_react.default.createElement("span",{className:"au-callout--calendar-event__name"},name))};exports.AUcalloutCalendar=AUcalloutCalendar;AUcalloutCalendar.propTypes={title:_propTypes.default.string.isRequired,level:_propTypes.default.number,srOnlyTitle:_propTypes.default.bool,dark:_propTypes.default.bool,alt:_propTypes.default.bool,subline:_propTypes.default.string,datetime:_propTypes.default.string.isRequired,time:_propTypes.default.string.isRequired,name:_propTypes.default.string,className:_propTypes.default.string};AUcalloutCalendar.defaultProps={level:2,srOnlyTitle:true};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,