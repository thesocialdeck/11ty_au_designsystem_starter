{
  "version": 3,
  "sources": [
    "react.es5.js"
  ],
  "names": [
    "AUlabel",
    "text",
    "dark",
    "inline",
    "className",
    "attributeOptions",
    "propTypes",
    "PropTypes",
    "string",
    "isRequired",
    "bool",
    "defaultProps",
    "AUhintText",
    "alt",
    "AUerrorText",
    "AUformGroup",
    "status",
    "oneOf",
    "AUfieldset",
    "AUlegend"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*! @gov.au/form v0.1.5 */\n/***************************************************************************************************************************************************************\n *\n * form function\n *\n * The form component contains layout, labelling and inline validations for form fields\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\nimport '../css/styles.css';\n\n\n/**\n * The label component\n *\n * @param  {string}  text            - Text of the label, required\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} inline           - Display the label inline, optional\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUlabel = ( { text, dark, inline, className, ...attributeOptions } ) => (\n\t<label className={\n\t\t\t`au-label ${ className }` +\n\t\t\t`${ dark ? ' au-label--dark' : '' }` +\n\t\t\t`${ inline ? ' au-label--inline' : ''}`\n\t\t}\n\t\t{ ...attributeOptions }\n\t>\n    { text }\n\t</label>\n);\n\nAUlabel.propTypes = {\n\t/**\n\t * Text of the label, required\n\t */\n\ttext: PropTypes.string.isRequired,\n\t/**\n\t * Add the dark variation class, optional\n\t */\n\tdark: PropTypes.bool,\n\t/**\n\t * Display the label inline, optional\n\t */\n\tinline: PropTypes.bool,\n\t/**\n\t * An additional class, optional\n\t */\n\tclassName: PropTypes.string,\n};\n\n\nAUlabel.defaultProps = {\n\tclassName: ''\n}\n\n\n/**\n * The hint text component\n *\n * @param  {string}  text             - Text of the label, required\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} alt              - Add the alt variation class, optional\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUhintText = ( { text, dark, alt, className, ...attributeOptions } ) => (\n\t<span className={\n\t\t`au-hint-text ${ className }` +\n\t\t`${ alt ? ' au-hint-text--alt' : '' }` +\n\t\t`${ dark ? ' au-hint-text--dark' : '' }`\n\t\t}\n\t\t{ ...attributeOptions }\n\t>\n    { text }\n\t</span>\n);\n\n\nAUhintText.propTypes = {\n\t/**\n\t * Text of the label, required\n\t */\n\ttext: PropTypes.string.isRequired,\n\t/**\n\t * Add the dark variation class, optional\n\t */\n\talt: PropTypes.bool,\n\t/**\n\t * Add the alt variation class, optional\n\t */\n\tdark: PropTypes.bool,\n\t/**\n\t * An additional class, optional\n\t */\n\tclassName: PropTypes.string,\n};\n\n\nAUhintText.defaultProps = {\n\tclassName: ''\n}\n\n\n/**\n * The error text component\n *\n * @param  {string}  text            - Text of the label, required\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {boolean} inline           - Display the error text inline, optional\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUerrorText = ( { text, dark, inline, className, ...attributeOptions } ) => (\n\t<span className={\n\t\t`au-error-text ${ className }` +\n\t\t`${ dark ? ' au-error-text--dark' : '' }` +\n\t\t`${ inline ? ' au-error-text--inline' : '' }`\n\t\t}\n\t\t{ ...attributeOptions }\n\t>\n\t{ text }\n\t</span>\n);\n\n\nAUerrorText.propTypes = {\n\t/**\n\t * Text of the label, required\n\t */\n\tdark: PropTypes.bool,\n\t/**\n\t * Add the dark variation class, optional\n\t */\n\ttext: PropTypes.string.isRequired,\n\t/**\n\t * Display the error text inline, optional\n\t */\n\tinline: PropTypes.bool,\n\t/**\n\t * An additional class, optional\n\t */\n\tclassName: PropTypes.string,\n};\n\n\nAUerrorText.defaultProps = {\n\tclassName: ''\n}\n\n/**\n * The form group component\n *\n * @param  {string}  status           - Adds invalid state to form group\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUformGroup = ( { status, dark, className, ...attributeOptions } ) => (\n\t<div className={\n\t\t`au-form-group ${ className }` +\n\t\t`${ status === 'invalid' ? ' au-form-group--invalid ' : ''}`\n\t\t}\n\t\t{ ...attributeOptions }\n\t></div>\n);\n\n\nAUformGroup.propTypes = {\n\t/**\n\t * Adds invalid state to form group\n\t */\n\tstatus: PropTypes.oneOf(['valid', 'invalid']),\n\t/**\n\t * An additional class, optional\n\t */\n\tclassName: PropTypes.string,\n};\n\nAUformGroup.defaultProps = {\n\tstatus: \"valid\",\n\tclassName: ''\n}\n\n\n/**\n * The fieldset component\n *\n * @param  {string}  className        - An additional class, optional\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUfieldset = ( { dark, className, ...attributeOptions } ) => (\n\t<fieldset className={\n\t\t\t`au-fieldset ${ className }` +\n\t\t\t`${ dark ? ' au-fieldset--dark' : '' }`\n\t\t}\n\t\t{ ...attributeOptions }\n\t>\n\t</fieldset>\n);\n\n\nAUfieldset.propTypes = {\n\t/**\n\t * An additional class, optional\n\t */\n\tclassName: PropTypes.string,\n};\n\n\nAUfieldset.defaultProps = {\n\tclassName: ''\n}\n\n\n/**\n * The legend component\n *\n * @param  {object}  attributeOptions - Any other attribute options\n */\nexport const AUlegend = ( {...attributeOptions} ) => (\n\t<legend className=\"au-fieldset__legend\" { ...attributeOptions }></legend>\n);\n"
  ]
}