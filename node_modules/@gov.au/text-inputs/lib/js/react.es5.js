"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * DEFAULT
 * The AUtextInput component
 *
 * @param  {string}  as               - The kind of input, can be either 'input' or 'textarea', default: 'input'
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {boolean} block            - Add the block variation class, optional
 * @param  {boolean} number           - Add the number variation class, optional
 * @param  {string}  status           - Mark this field as either 'valid' or 'invalid', optional
 * @param  {string}  type             - The type of the field, optional, default: text
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUtextInput=function AUtextInput(_ref){var as=_ref.as,dark=_ref.dark,block=_ref.block,number=_ref.number,status=_ref.status,width=_ref.width,_ref$type=_ref.type,type=_ref$type===void 0?"text":_ref$type,_ref$className=_ref.className,className=_ref$className===void 0?"":_ref$className,attributeOptions=_objectWithoutProperties(_ref,["as","dark","block","number","status","width","type","className"]);return as==="textarea"?_react["default"].createElement("textarea",_extends({className:"au-text-input ".concat(className)+"".concat(block?" au-text-input--block":"")+"".concat(dark?" au-text-input--dark":"")+"".concat(number?" au-text-input--number":"")+"".concat(status==="valid"?" au-text-input--valid":"")+"".concat(status==="invalid"?" au-text-input--invalid":"")+"".concat(width?" au-text-input--width-"+width:"")},attributeOptions)):_react["default"].createElement("input",_extends({className:"au-text-input ".concat(className)+"".concat(dark?" au-text-input--dark":"")+"".concat(block?" au-text-input--block":"")+"".concat(number?" au-text-input--number":"")+"".concat(status==="valid"?" au-text-input--valid":"")+"".concat(status==="invalid"?" au-text-input--invalid":"")+"".concat(width?" au-text-input--width-"+width:""),type:type},attributeOptions))};AUtextInput.propTypes={as:_propTypes["default"].oneOf(["input","textarea"]),dark:_propTypes["default"].bool,block:_propTypes["default"].bool,number:_propTypes["default"].bool,status:_propTypes["default"].oneOf(["valid","invalid"]),className:_propTypes["default"].string,width:_propTypes["default"].oneOf(["xs","sm","md","lg","xl"])};AUtextInput.defaultProps={as:"input"};var _default=AUtextInput;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVXRleHRJbnB1dCIsImFzIiwiZGFyayIsImJsb2NrIiwibnVtYmVyIiwic3RhdHVzIiwid2lkdGgiLCJ0eXBlIiwiY2xhc3NOYW1lIiwiYXR0cmlidXRlT3B0aW9ucyIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9uZU9mIiwiYm9vbCIsInN0cmluZyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6ImdHQVNBLG9EQUNBLDZEQU1BLDZCLDRpQ0FHQTs7Ozs7Ozs7Ozs7O0dBYUEsR0FBTUEsQ0FBQUEsV0FBVyxDQUFHLFFBQWRBLENBQUFBLFdBQWMsVUFBR0MsQ0FBQUEsRUFBSCxNQUFHQSxFQUFILENBQU9DLElBQVAsTUFBT0EsSUFBUCxDQUFhQyxLQUFiLE1BQWFBLEtBQWIsQ0FBb0JDLE1BQXBCLE1BQW9CQSxNQUFwQixDQUE0QkMsTUFBNUIsTUFBNEJBLE1BQTVCLENBQW9DQyxLQUFwQyxNQUFvQ0EsS0FBcEMsZ0JBQTJDQyxJQUEzQyxDQUEyQ0EsSUFBM0Msb0JBQWtELE1BQWxELCtCQUEwREMsU0FBMUQsQ0FBMERBLFNBQTFELHlCQUFzRSxFQUF0RSxnQkFBNkVDLGdCQUE3RSx5R0FDbkJSLENBQUFBLEVBQUUsR0FBSyxVQUFQLENBQ0cscURBQ0EsU0FBUyxDQUNSLHdCQUFrQk8sU0FBbEIsWUFDSUwsS0FBSyxDQUFHLHVCQUFILENBQTZCLEVBRHRDLFlBRUlELElBQUksQ0FBRyxzQkFBSCxDQUE0QixFQUZwQyxZQUdJRSxNQUFNLENBQUcsd0JBQUgsQ0FBOEIsRUFIeEMsWUFJSUMsTUFBTSxHQUFLLE9BQVgsQ0FBcUIsdUJBQXJCLENBQStDLEVBSm5ELFlBS0lBLE1BQU0sR0FBSyxTQUFYLENBQXVCLHlCQUF2QixDQUFtRCxFQUx2RCxZQU1JQyxLQUFLLENBQUcseUJBQTJCQSxLQUE5QixDQUFzQyxFQU4vQyxDQUZELEVBVUtHLGdCQVZMLEVBREgsQ0FhRyxrREFBTyxTQUFTLENBQ2Ysd0JBQWtCRCxTQUFsQixZQUNJTixJQUFJLENBQUcsc0JBQUgsQ0FBNEIsRUFEcEMsWUFFSUMsS0FBSyxDQUFHLHVCQUFILENBQTZCLEVBRnRDLFlBR0lDLE1BQU0sQ0FBRyx3QkFBSCxDQUE4QixFQUh4QyxZQUlJQyxNQUFNLEdBQUssT0FBWCxDQUFxQix1QkFBckIsQ0FBK0MsRUFKbkQsWUFLSUEsTUFBTSxHQUFLLFNBQVgsQ0FBdUIseUJBQXZCLENBQW1ELEVBTHZELFlBTUlDLEtBQUssQ0FBRyx5QkFBMkJBLEtBQTlCLENBQXNDLEVBTi9DLENBREQsQ0FTQSxJQUFJLENBQUdDLElBVFAsRUFTbUJFLGdCQVRuQixFQWRnQixDQUFwQixDQTJCQVQsV0FBVyxDQUFDVSxTQUFaLENBQXdCLENBQ3ZCVCxFQUFFLENBQUVVLHNCQUFVQyxLQUFWLENBQWdCLENBQUUsT0FBRixDQUFXLFVBQVgsQ0FBaEIsQ0FEbUIsQ0FFdkJWLElBQUksQ0FBRVMsc0JBQVVFLElBRk8sQ0FHdkJWLEtBQUssQ0FBRVEsc0JBQVVFLElBSE0sQ0FJdkJULE1BQU0sQ0FBRU8sc0JBQVVFLElBSkssQ0FLdkJSLE1BQU0sQ0FBRU0sc0JBQVVDLEtBQVYsQ0FBZ0IsQ0FBRSxPQUFGLENBQVcsU0FBWCxDQUFoQixDQUxlLENBTXZCSixTQUFTLENBQUVHLHNCQUFVRyxNQU5FLENBT3ZCUixLQUFLLENBQUVLLHNCQUFVQyxLQUFWLENBQWdCLENBQUUsSUFBRixDQUFRLElBQVIsQ0FBYyxJQUFkLENBQW9CLElBQXBCLENBQTBCLElBQTFCLENBQWhCLENBUGdCLENBQXhCLENBVUFaLFdBQVcsQ0FBQ2UsWUFBWixDQUEyQixDQUMxQmQsRUFBRSxDQUFFLE9BRHNCLENBQTNCLEMsYUFJZUQsVyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBAZ292LmF1L3RleHQtaW5wdXRzIHYyLjEuMiAqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICpcbiAqIHRleHQtaW5wdXQgZnVuY3Rpb25cbiAqXG4gKiBUZXh0IGlucHV0cyBpbmNsdWRlIHRleHQgaW5wdXRzLCBsYWJlbHMsIGhpbnRzIGFuZCB0ZXh0YXJlYXMuIFRoZXkgYWxsb3cgdXNlcnMgdG8gaW5wdXQgZGF0YSBpbnRvIGEgZmllbGQuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBERUZBVUxUXG4gKiBUaGUgQVV0ZXh0SW5wdXQgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgYXMgICAgICAgICAgICAgICAtIFRoZSBraW5kIG9mIGlucHV0LCBjYW4gYmUgZWl0aGVyICdpbnB1dCcgb3IgJ3RleHRhcmVhJywgZGVmYXVsdDogJ2lucHV0J1xuICogQHBhcmFtICB7Ym9vbGVhbn0gZGFyayAgICAgICAgICAgICAtIEFkZCB0aGUgZGFyayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtib29sZWFufSBibG9jayAgICAgICAgICAgIC0gQWRkIHRoZSBibG9jayB2YXJpYXRpb24gY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtib29sZWFufSBudW1iZXIgICAgICAgICAgIC0gQWRkIHRoZSBudW1iZXIgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7c3RyaW5nfSAgc3RhdHVzICAgICAgICAgICAtIE1hcmsgdGhpcyBmaWVsZCBhcyBlaXRoZXIgJ3ZhbGlkJyBvciAnaW52YWxpZCcsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICB0eXBlICAgICAgICAgICAgIC0gVGhlIHR5cGUgb2YgdGhlIGZpZWxkLCBvcHRpb25hbCwgZGVmYXVsdDogdGV4dFxuICogQHBhcmFtICB7c3RyaW5nfSAgY2xhc3NOYW1lICAgICAgICAtIEFuIGFkZGl0aW9uYWwgY2xhc3MsIG9wdGlvbmFsXG4gKiBAcGFyYW0gIHtvYmplY3R9ICBhdHRyaWJ1dGVPcHRpb25zIC0gQW55IG90aGVyIGF0dHJpYnV0ZSBvcHRpb25zXG4gKi9cbmNvbnN0IEFVdGV4dElucHV0ID0gKHsgYXMsIGRhcmssIGJsb2NrLCBudW1iZXIsIHN0YXR1cywgd2lkdGgsIHR5cGUgPSAndGV4dCcsIGNsYXNzTmFtZSA9ICcnLCAuLi5hdHRyaWJ1dGVPcHRpb25zIH0pID0+IChcblx0YXMgPT09ICd0ZXh0YXJlYSdcblx0XHQ/IDx0ZXh0YXJlYVxuXHRcdFx0XHRjbGFzc05hbWU9e1xuXHRcdFx0XHRcdGBhdS10ZXh0LWlucHV0ICR7IGNsYXNzTmFtZSB9YCArXG5cdFx0XHRcdFx0YCR7IGJsb2NrID8gJyBhdS10ZXh0LWlucHV0LS1ibG9jaycgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IGRhcmsgPyAnIGF1LXRleHQtaW5wdXQtLWRhcmsnIDogJycgfWAgK1xuXHRcdFx0XHRcdGAkeyBudW1iZXIgPyAnIGF1LXRleHQtaW5wdXQtLW51bWJlcicgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IHN0YXR1cyA9PT0gJ3ZhbGlkJyA/ICcgYXUtdGV4dC1pbnB1dC0tdmFsaWQnIDogJycgfWAgK1xuXHRcdFx0XHRcdGAkeyBzdGF0dXMgPT09ICdpbnZhbGlkJyA/ICcgYXUtdGV4dC1pbnB1dC0taW52YWxpZCcgOiAnJyB9YCArIFxuXHRcdFx0XHRcdGAkeyB3aWR0aCA/ICcgYXUtdGV4dC1pbnB1dC0td2lkdGgtJyArIHdpZHRoIDogJycgfWBcdFx0XHRcdFx0XG5cdFx0XHRcdH1cblx0XHRcdFx0eyAuLi5hdHRyaWJ1dGVPcHRpb25zIH0gPlxuXHRcdFx0PC90ZXh0YXJlYT5cblx0XHQ6IDxpbnB1dCBjbGFzc05hbWU9e1xuXHRcdFx0XHRcdGBhdS10ZXh0LWlucHV0ICR7IGNsYXNzTmFtZSB9YCArXG5cdFx0XHRcdFx0YCR7IGRhcmsgPyAnIGF1LXRleHQtaW5wdXQtLWRhcmsnIDogJycgfWAgK1xuXHRcdFx0XHRcdGAkeyBibG9jayA/ICcgYXUtdGV4dC1pbnB1dC0tYmxvY2snIDogJycgfWAgK1xuXHRcdFx0XHRcdGAkeyBudW1iZXIgPyAnIGF1LXRleHQtaW5wdXQtLW51bWJlcicgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IHN0YXR1cyA9PT0gJ3ZhbGlkJyA/ICcgYXUtdGV4dC1pbnB1dC0tdmFsaWQnIDogJycgfWAgK1xuXHRcdFx0XHRcdGAkeyBzdGF0dXMgPT09ICdpbnZhbGlkJyA/ICcgYXUtdGV4dC1pbnB1dC0taW52YWxpZCcgOiAnJyB9YCArXG5cdFx0XHRcdFx0YCR7IHdpZHRoID8gJyBhdS10ZXh0LWlucHV0LS13aWR0aC0nICsgd2lkdGggOiAnJyB9YFxuXHRcdFx0XHR9XG5cdFx0XHRcdHR5cGU9eyB0eXBlIH0geyAuLi5hdHRyaWJ1dGVPcHRpb25zIH1cblx0XHRcdC8+XG4pO1xuXG5BVXRleHRJbnB1dC5wcm9wVHlwZXMgPSB7XG5cdGFzOiBQcm9wVHlwZXMub25lT2YoWyAnaW5wdXQnLCAndGV4dGFyZWEnIF0pLFxuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0YmxvY2s6IFByb3BUeXBlcy5ib29sLFxuXHRudW1iZXI6IFByb3BUeXBlcy5ib29sLFxuXHRzdGF0dXM6IFByb3BUeXBlcy5vbmVPZihbICd2YWxpZCcsICdpbnZhbGlkJyBdKSxcblx0Y2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHR3aWR0aDogUHJvcFR5cGVzLm9uZU9mKFsgJ3hzJywgJ3NtJywgJ21kJywgJ2xnJywgJ3hsJyBdKVxufTtcblxuQVV0ZXh0SW5wdXQuZGVmYXVsdFByb3BzID0ge1xuXHRhczogJ2lucHV0Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFVdGV4dElucHV0O1xuIl19