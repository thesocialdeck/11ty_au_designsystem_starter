{
  "version": 3,
  "sources": [
    "react.es5.js"
  ],
  "names": [
    "StatusText",
    "doing",
    "todo",
    "done",
    "AUprogressIndicatorItem",
    "link",
    "linkComponent",
    "text",
    "status",
    "statusText",
    "className",
    "li",
    "attributeOptions",
    "LinkComponent",
    "href",
    "to",
    "propTypes",
    "PropTypes",
    "string",
    "isRequired",
    "oneOf",
    "object",
    "oneOfType",
    "func",
    "defaultProps",
    "AUprogressIndicator",
    "dark",
    "items",
    "map",
    "item",
    "i",
    "bool",
    "arrayOf",
    "shape"
  ],
  "mappings": "6HASA,oDACA,6DAMA,6B,0iCAEA;;;;GAKA,GAAMA,CAAAA,UAAU,CAAG,CAClBC,KAAK,CAAE,OADW,CAElBC,IAAI,CAAE,OAFY,CAGlBC,IAAI,CAAE,MAHY,CAAnB,CAOA;;;;;;;;;;;GAYO,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAAqG,IAAlGC,CAAAA,IAAkG,MAAlGA,IAAkG,CAA5FC,aAA4F,MAA5FA,aAA4F,CAA7EC,IAA6E,MAA7EA,IAA6E,CAAvEC,MAAuE,MAAvEA,MAAuE,CAA/DC,UAA+D,MAA/DA,UAA+D,qBAAnDC,SAAmD,CAAnDA,SAAmD,yBAAvC,EAAuC,6BAAnCC,EAAmC,CAAnCA,EAAmC,kBAA9B,EAA8B,SAAvBC,gBAAuB,uGAC3I,GAAMC,CAAAA,aAAa,CAAGP,aAAtB,CAEA,GAAID,IAAJ,CAAU,CACT;AACA,GAAIQ,aAAa,GAAK,GAAtB,CAA4B,CAC3BD,gBAAgB,CAACE,IAAjB,CAAwBT,IACxB,CACD;AAHA,IAIK,IAAI,MAAOQ,CAAAA,aAAP,GAAyB,UAA7B,CAA0C,CAC9CD,gBAAgB,CAACG,EAAjB,CAAsBV,IACtB,CACD,CAED,MACC,mCAASM,EAAT,CAECN,IAAI,CAEF,6BAAC,aAAD,WAAe,SAAS,oEAA+DG,MAA/D,aAA2EE,SAA3E,CAAxB,EAAsHE,gBAAtH,EACC,qCAAM,SAAS,CAAC,+BAAhB,EAAkDH,UAAU,CAAGA,UAAH,CAAgBT,UAAU,CAAEQ,MAAF,CAAtF,CADD,CAEGD,IAFH,CAFE,CAOF,gDAAQ,SAAS,oEAA+DC,MAA/D,aAA2EE,SAA3E,CAAjB,EAA+GE,gBAA/G,EACC,qCAAM,SAAS,CAAC,+BAAhB,EAAkDH,UAAU,CAAGA,UAAH,CAAgBT,UAAU,CAAEQ,MAAF,CAAtF,CADD,CAEGD,IAFH,CATH,CAgBD,CA/BM,C,wDAiCPH,uBAAuB,CAACY,SAAxB,CAAoC,CACnCX,IAAI,CAAEY,mBAAUC,MADmB,CAEnCX,IAAI,CAAEU,mBAAUC,MAAV,CAAiBC,UAFY,CAGnCX,MAAM,CAAES,mBAAUA,SAAV,CAAoBG,KAApB,CAA0B,CAAE,OAAF,CAAW,MAAX,CAAmB,MAAnB,CAA1B,EAAuDD,UAH5B,CAInCV,UAAU,CAAEQ,mBAAUC,MAJa,CAKnCP,EAAE,CAAEM,mBAAUI,MALqB,CAMnCf,aAAa,CAAEW,mBAAUK,SAAV,CAAoB,CAAEL,mBAAUC,MAAZ,CAAoBD,mBAAUM,IAA9B,CAApB,CANoB,CAApC,CAUAnB,uBAAuB,CAACoB,YAAxB,CAAuC,CACtClB,aAAa,CAAE,GADuB,CAAvC,CAKA;;;;;;;;;GAUA,GAAMmB,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,WAAGC,CAAAA,IAAH,OAAGA,IAAH,CAASpB,aAAT,OAASA,aAAT,CAAwBqB,KAAxB,OAAwBA,KAAxB,uBAA+BjB,SAA/B,CAA+BA,SAA/B,0BAA2C,EAA3C,iBAAkDE,gBAAlD,oFAC3B,6CAAI,SAAS,gCAA4Bc,IAAI,CAAG,8BAAH,CAAoC,EAApE,aAA4EhB,SAA5E,CAAb,EAA6GE,gBAA7G,EAEEe,KAAK,CAACC,GAAN,CACC,SAAEC,IAAF,CAAQC,CAAR,QAAe,8BAAC,uBAAD,WAAyB,aAAa,CAAGxB,aAAzC,CAAyD,GAAG,CAAGwB,CAA/D,EAAwED,IAAxE,EAAf,CADD,CAFF,CAD2B,CAA5B,CAUAJ,mBAAmB,CAACT,SAApB,CAAgC,CAC/BU,IAAI,CAAET,mBAAUc,IADe,CAE/BJ,KAAK,CAAEV,mBAAUe,OAAV,CACNf,mBAAUgB,KAAV,CAAgB,CACf5B,IAAI,CAAEY,mBAAUC,MADD,CAEfX,IAAI,CAAEU,mBAAUC,MAAV,CAAiBC,UAFR,CAGfX,MAAM,CAAES,mBAAUA,SAAV,CAAoBG,KAApB,CAA0B,CAAE,OAAF,CAAW,MAAX,CAAmB,MAAnB,CAA1B,EAAuDD,UAHhD,CAIfV,UAAU,CAAEQ,mBAAUC,MAJP,CAKfP,EAAE,CAAEM,mBAAUI,MALC,CAAhB,CADM,EAQLF,UAV6B,CAW/Bb,aAAa,CAAEW,mBAAUK,SAAV,CAAoB,CAAEL,mBAAUC,MAAZ,CAAoBD,mBAAUM,IAA9B,CAApB,CAXgB,CAAhC,CAcAE,mBAAmB,CAACD,YAApB,CAAmC,CAClClB,aAAa,CAAE,GADmB,CAAnC,C,aAIemB,mB",
  "sourcesContent": [
    "/*! @gov.au/progress-indicator v3.1.7 */\n/***************************************************************************************************************************************************************\n *\n * progress-indicator function\n *\n * Indicator of progress through a multitude of pages mostly used for forms.\n *\n **************************************************************************************************************************************************************/\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\n// The following line will be replaced automatically with generic imports for the ES5 pipeline.\n// You can safely ignore this bit if you use this module with pancake\n//\nimport '../css/styles.css';\n\n/**\n * All status options, can be overwritten\n *\n * @type {Object}\n */\nconst StatusText = {\n\tdoing: 'Doing',\n\ttodo: 'To do',\n\tdone: 'Done',\n};\n\n\n/**\n * An item inside the AUprogressIndicator component\n *\n * @param  {string}   link             - The link URL, If no link is passed we render a button instead of a link tag, optional\n * @param  {string}  linkComponent     - The component used for the link\n * @param  {string}   text             - The text of this item\n * @param  {string}   status           - The status of this item\n * @param  {string}   statusText       - The status text of this item, optional\n * @param  {string}   className        - An additional class, optional\n * @param  {object}   li               - An additional object to be spread into the wrapping element, optional\n * @param  {object}   attributeOptions - Any other attribute options\n */\nexport const AUprogressIndicatorItem = ({ link, linkComponent, text, status, statusText, className = '', li = {}, ...attributeOptions }) => {\n\tconst LinkComponent = linkComponent;\n\n\tif( link ){\n\t\t// If we are using a normal link\n\t\tif( LinkComponent === 'a' ) {\n\t\t\tattributeOptions.href = link;\n\t\t}\n\t\t// If we are using a link component\n\t\telse if( typeof LinkComponent === 'function' ) {\n\t\t\tattributeOptions.to = link;\n\t\t}\n\t}\n\n\treturn(\n\t\t<li { ...li }>\n\t\t{\n\t\t\tlink\n\t\t\t\t?\n\t\t\t\t\t<LinkComponent className={`au-progress-indicator__link au-progress-indicator__link--${ status } ${ className }`} { ...attributeOptions }>\n\t\t\t\t\t\t<span className=\"au-progress-indicator__status\">{ statusText ? statusText : StatusText[ status ] }</span>\n\t\t\t\t\t\t{ text }\n\t\t\t\t\t</LinkComponent>\n\t\t\t\t:\n\t\t\t\t\t<button className={`au-progress-indicator__link au-progress-indicator__link--${ status } ${ className }`} { ...attributeOptions }>\n\t\t\t\t\t\t<span className=\"au-progress-indicator__status\">{ statusText ? statusText : StatusText[ status ] }</span>\n\t\t\t\t\t\t{ text }\n\t\t\t\t\t</button>\n\t\t}\n\t</li>\n\t)\n};\n\nAUprogressIndicatorItem.propTypes = {\n\tlink: PropTypes.string,\n\ttext: PropTypes.string.isRequired,\n\tstatus: PropTypes.PropTypes.oneOf([ 'doing', 'todo', 'done' ]).isRequired,\n\tstatusText: PropTypes.string,\n\tli: PropTypes.object,\n\tlinkComponent: PropTypes.oneOfType([ PropTypes.string, PropTypes.func ]),\n};\n\n\nAUprogressIndicatorItem.defaultProps = {\n\tlinkComponent: 'a',\n};\n\n\n/**\n * DEFAULT\n * The progress-indicator component\n *\n * @param  {boolean} dark             - Add the dark variation class, optional\n * @param  {array}   items            - All items for this progress indicator\n * @param  {string}  className        - An additional class, optional\n * @param  {string}  linkComponent    - The component used for the link\n * @param  {object}  attributeOptions - Any other attribute options\n */\nconst AUprogressIndicator = ({ dark, linkComponent, items, className = '', ...attributeOptions }) => (\n\t<ul className={ `au-progress-indicator${ dark ? ' au-progress-indicator--dark' : '' } ${ className }` } { ...attributeOptions }>\n\t\t{\n\t\t\titems.map(\n\t\t\t\t( item, i ) => <AUprogressIndicatorItem linkComponent={ linkComponent } key={ i } { ...item } />\n\t\t\t)\n\t\t}\n\t</ul>\n);\n\nAUprogressIndicator.propTypes = {\n\tdark: PropTypes.bool,\n\titems: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tlink: PropTypes.string,\n\t\t\ttext: PropTypes.string.isRequired,\n\t\t\tstatus: PropTypes.PropTypes.oneOf([ 'doing', 'todo', 'done' ]).isRequired,\n\t\t\tstatusText: PropTypes.string,\n\t\t\tli: PropTypes.object,\n\t\t})\n\t).isRequired,\n\tlinkComponent: PropTypes.oneOfType([ PropTypes.string, PropTypes.func ]),\n};\n\nAUprogressIndicator.defaultProps = {\n\tlinkComponent: 'a',\n};\n\nexport default AUprogressIndicator;\n"
  ]
}