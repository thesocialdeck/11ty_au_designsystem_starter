"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));var _textInputs=_interopRequireDefault(require("@gov.au/text-inputs"));var _buttons=_interopRequireDefault(require("@gov.au/buttons"));require("../css/styles.css");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * AUsearchBox
 *
 * @param  {string} label       - Text on label
 * @param  {string} btnText     - Text on button
 * @param  {string} id          - Id of text input, required
 * @param  {bool}   dark        - Dark variation of search box
 * @param  {bool}   responsive  - Responsive variation, text turns to icon on smaller devices
 * @param  {bool}   icon        - Icon only, hides text on button
 * @param  {object} btnProps    - Props to be passed into the AUbutton
 * @param  {object} inputProps    - Props to be passed into the AUtextInput
 *
 */var AUsearchbox=function AUsearchbox(_ref){var label=_ref.label,btnText=_ref.btnText,dark=_ref.dark,responsive=_ref.responsive,id=_ref.id,icon=_ref.icon,wrapper=_ref.wrapper,className=_ref.className,inputProps=_ref.inputProps,btnProps=_ref.btnProps,onClick=_ref.onClick,attributeOptions=_objectWithoutProperties(_ref,["label","btnText","dark","responsive","id","icon","wrapper","className","inputProps","btnProps","onClick"]);var Wrapper=wrapper;if(Wrapper==="form"){attributeOptions.role="search"}return _react["default"].createElement(Wrapper,_extends({className:"au-search "+"".concat(dark?"au-search--dark":""," ")+"".concat(icon?"au-search--icon":""," ")+"".concat(responsive?"au-search--responsive":""," ")+"".concat(className)},attributeOptions),label&&_react["default"].createElement("label",{htmlFor:id,className:"au-search__label"},label),_react["default"].createElement(_textInputs["default"],_extends({dark:dark,id:id,type:"search"},inputProps)),_react["default"].createElement("div",{className:"au-search__btn"},_react["default"].createElement(_buttons["default"],_extends({dark:dark},btnProps),_react["default"].createElement("span",{className:"au-search__submit-btn-text"},btnText))))};AUsearchbox.propTypes={label:_propTypes["default"].string,btnText:_propTypes["default"].string,id:_propTypes["default"].string.isRequired,dark:_propTypes["default"].bool,icon:_propTypes["default"].bool,responsive:_propTypes["default"].bool,wrapper:_propTypes["default"].oneOf(["div","form"]),inputProps:_propTypes["default"].object,btnProps:_propTypes["default"].object};AUsearchbox.defaultProps={className:"",btnText:"Search",wrapper:"form"};var _default=AUsearchbox;exports["default"]=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVXNlYXJjaGJveCIsImxhYmVsIiwiYnRuVGV4dCIsImRhcmsiLCJyZXNwb25zaXZlIiwiaWQiLCJpY29uIiwid3JhcHBlciIsImNsYXNzTmFtZSIsImlucHV0UHJvcHMiLCJidG5Qcm9wcyIsIm9uQ2xpY2siLCJhdHRyaWJ1dGVPcHRpb25zIiwiV3JhcHBlciIsInJvbGUiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYm9vbCIsIm9uZU9mIiwib2JqZWN0IiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiZ0dBU0Esb0RBQ0EsNkRBRUEsdUVBR0EsZ0VBT0EsNkIsNGlDQUdBOzs7Ozs7Ozs7Ozs7R0FhQSxHQUFNQSxDQUFBQSxXQUFXLENBQUcsUUFBZEEsQ0FBQUEsV0FBYyxNQUEySCxJQUF4SEMsQ0FBQUEsS0FBd0gsTUFBeEhBLEtBQXdILENBQWpIQyxPQUFpSCxNQUFqSEEsT0FBaUgsQ0FBeEdDLElBQXdHLE1BQXhHQSxJQUF3RyxDQUFsR0MsVUFBa0csTUFBbEdBLFVBQWtHLENBQXRGQyxFQUFzRixNQUF0RkEsRUFBc0YsQ0FBbEZDLElBQWtGLE1BQWxGQSxJQUFrRixDQUE1RUMsT0FBNEUsTUFBNUVBLE9BQTRFLENBQW5FQyxTQUFtRSxNQUFuRUEsU0FBbUUsQ0FBeERDLFVBQXdELE1BQXhEQSxVQUF3RCxDQUE1Q0MsUUFBNEMsTUFBNUNBLFFBQTRDLENBQWxDQyxPQUFrQyxNQUFsQ0EsT0FBa0MsQ0FBdEJDLGdCQUFzQiw0SUFFOUksR0FBSUMsQ0FBQUEsT0FBTyxDQUFHTixPQUFkLENBRUEsR0FBS00sT0FBTyxHQUFLLE1BQWpCLENBQTBCLENBQ3pCRCxnQkFBZ0IsQ0FBQ0UsSUFBakIsQ0FBd0IsUUFDeEIsQ0FFRCxNQUNDLGlDQUFDLE9BQUQsV0FBUyxTQUFTLENBQUUsdUJBQ1hYLElBQUksQ0FBRyxpQkFBSCxDQUF1QixFQURoQixnQkFFWEcsSUFBSSxDQUFHLGlCQUFILENBQXVCLEVBRmhCLGdCQUdYRixVQUFVLENBQUcsdUJBQUgsQ0FBNkIsRUFINUIsZ0JBSVhJLFNBSlcsQ0FBcEIsRUFJMEJJLGdCQUoxQixFQUtHWCxLQUFLLEVBQUkseUNBQU8sT0FBTyxDQUFFSSxFQUFoQixDQUFxQixTQUFTLENBQUMsa0JBQS9CLEVBQW1ESixLQUFuRCxDQUxaLENBT0MsZ0NBQUMsc0JBQUQsV0FBYSxJQUFJLENBQUVFLElBQW5CLENBQXlCLEVBQUUsQ0FBRUUsRUFBN0IsQ0FBaUMsSUFBSSxDQUFDLFFBQXRDLEVBQW1ESSxVQUFuRCxFQVBELENBUUMsdUNBQUssU0FBUyxDQUFDLGdCQUFmLEVBQ0MsZ0NBQUMsbUJBQUQsV0FBVSxJQUFJLENBQUVOLElBQWhCLEVBQTBCTyxRQUExQixFQUNFLHdDQUFNLFNBQVMsQ0FBQyw0QkFBaEIsRUFBOENSLE9BQTlDLENBREYsQ0FERCxDQVJELENBZUQsQ0F4QkQsQ0EwQkFGLFdBQVcsQ0FBQ2UsU0FBWixDQUF3QixDQUN2QmQsS0FBSyxDQUFFZSxzQkFBVUMsTUFETSxDQUV2QmYsT0FBTyxDQUFFYyxzQkFBVUMsTUFGSSxDQUd2QlosRUFBRSxDQUFFVyxzQkFBVUMsTUFBVixDQUFpQkMsVUFIRSxDQUl2QmYsSUFBSSxDQUFFYSxzQkFBVUcsSUFKTyxDQUt2QmIsSUFBSSxDQUFFVSxzQkFBVUcsSUFMTyxDQU12QmYsVUFBVSxDQUFFWSxzQkFBVUcsSUFOQyxDQU92QlosT0FBTyxDQUFFUyxzQkFBVUksS0FBVixDQUFnQixDQUFFLEtBQUYsQ0FBUyxNQUFULENBQWhCLENBUGMsQ0FRdkJYLFVBQVUsQ0FBRU8sc0JBQVVLLE1BUkMsQ0FTdkJYLFFBQVEsQ0FBRU0sc0JBQVVLLE1BVEcsQ0FBeEIsQ0FZQXJCLFdBQVcsQ0FBQ3NCLFlBQVosQ0FBMkIsQ0FDMUJkLFNBQVMsQ0FBRSxFQURlLENBRTFCTixPQUFPLENBQUUsUUFGaUIsQ0FHMUJLLE9BQU8sQ0FBRSxNQUhpQixDQUEzQixDLGFBTWVQLFciLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGdvdi5hdS9zZWFyY2hib3ggdjAuMi4yICovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKlxuICogc2VhcmNoYm94IGZ1bmN0aW9uXG4gKlxuICpcbiAqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5pbXBvcnQgQVV0ZXh0SW5wdXQgZnJvbSAnQGdvdi5hdS90ZXh0LWlucHV0cyc7XG4vLyBFUzYgZGVwZW5kZW5jeTogaW1wb3J0IEFVdGV4dElucHV0IGZyb20gJy4vdGV4dC1pbnB1dHMnO1xuXG5pbXBvcnQgQVVidXR0b24gZnJvbSAnQGdvdi5hdS9idXR0b25zJztcbi8vIEVTNiBkZXBlbmRlbmN5OiBpbXBvcnQgQVVidXR0b24gZnJvbSAnLi9idXR0b25zJztcblxuXG4vLyBUaGUgZm9sbG93aW5nIGxpbmUgd2lsbCBiZSByZXBsYWNlZCBhdXRvbWF0aWNhbGx5IHdpdGggZ2VuZXJpYyBpbXBvcnRzIGZvciB0aGUgRVM1IHBpcGVsaW5lLlxuLy8gWW91IGNhbiBzYWZlbHkgaWdub3JlIHRoaXMgYml0IGlmIHlvdSB1c2UgdGhpcyBtb2R1bGUgd2l0aCBwYW5jYWtlXG4vL1xuaW1wb3J0ICcuLi9jc3Mvc3R5bGVzLmNzcyc7XG5cblxuLyoqXG4gKiBBVXNlYXJjaEJveFxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gbGFiZWwgICAgICAgLSBUZXh0IG9uIGxhYmVsXG4gKiBAcGFyYW0gIHtzdHJpbmd9IGJ0blRleHQgICAgIC0gVGV4dCBvbiBidXR0b25cbiAqIEBwYXJhbSAge3N0cmluZ30gaWQgICAgICAgICAgLSBJZCBvZiB0ZXh0IGlucHV0LCByZXF1aXJlZFxuICogQHBhcmFtICB7Ym9vbH0gICBkYXJrICAgICAgICAtIERhcmsgdmFyaWF0aW9uIG9mIHNlYXJjaCBib3hcbiAqIEBwYXJhbSAge2Jvb2x9ICAgcmVzcG9uc2l2ZSAgLSBSZXNwb25zaXZlIHZhcmlhdGlvbiwgdGV4dCB0dXJucyB0byBpY29uIG9uIHNtYWxsZXIgZGV2aWNlc1xuICogQHBhcmFtICB7Ym9vbH0gICBpY29uICAgICAgICAtIEljb24gb25seSwgaGlkZXMgdGV4dCBvbiBidXR0b25cbiAqIEBwYXJhbSAge29iamVjdH0gYnRuUHJvcHMgICAgLSBQcm9wcyB0byBiZSBwYXNzZWQgaW50byB0aGUgQVVidXR0b25cbiAqIEBwYXJhbSAge29iamVjdH0gaW5wdXRQcm9wcyAgICAtIFByb3BzIHRvIGJlIHBhc3NlZCBpbnRvIHRoZSBBVXRleHRJbnB1dFxuICpcbiAqL1xuY29uc3QgQVVzZWFyY2hib3ggPSAoeyBsYWJlbCwgYnRuVGV4dCwgZGFyaywgcmVzcG9uc2l2ZSwgaWQsIGljb24sIHdyYXBwZXIsIGNsYXNzTmFtZSwgaW5wdXRQcm9wcywgYnRuUHJvcHMsIG9uQ2xpY2ssIC4uLmF0dHJpYnV0ZU9wdGlvbnN9KSA9PiB7XG5cblx0bGV0IFdyYXBwZXIgPSB3cmFwcGVyO1xuXG5cdGlmICggV3JhcHBlciA9PT0gJ2Zvcm0nICkge1xuXHRcdGF0dHJpYnV0ZU9wdGlvbnMucm9sZSA9IFwic2VhcmNoXCI7XG5cdH1cblxuXHRyZXR1cm4oXG5cdFx0PFdyYXBwZXIgY2xhc3NOYW1lPXtgYXUtc2VhcmNoIGAgK1xuXHRcdFx0XHRcdFx0XHRcdGAke2RhcmsgPyAnYXUtc2VhcmNoLS1kYXJrJyA6ICcnfSBgICtcblx0XHRcdFx0XHRcdFx0XHRgJHtpY29uID8gJ2F1LXNlYXJjaC0taWNvbicgOiAnJ30gYCArXG5cdFx0XHRcdFx0XHRcdFx0YCR7cmVzcG9uc2l2ZSA/ICdhdS1zZWFyY2gtLXJlc3BvbnNpdmUnIDogJyd9IGAgK1xuXHRcdFx0XHRcdFx0XHRcdGAke2NsYXNzTmFtZX1gfSB7Li4uYXR0cmlidXRlT3B0aW9uc30+XG5cdFx0XHR7IGxhYmVsICYmIDxsYWJlbCBodG1sRm9yPXtpZCB9IGNsYXNzTmFtZT1cImF1LXNlYXJjaF9fbGFiZWxcIj57bGFiZWx9PC9sYWJlbD4gfVxuXG5cdFx0XHQ8QVV0ZXh0SW5wdXQgZGFyaz17ZGFya30gaWQ9e2lkfSB0eXBlPVwic2VhcmNoXCIgey4uLmlucHV0UHJvcHN9IC8+XG5cdFx0XHQ8ZGl2IGNsYXNzTmFtZT1cImF1LXNlYXJjaF9fYnRuXCI+XG5cdFx0XHRcdDxBVWJ1dHRvbiBkYXJrPXtkYXJrfSB7Li4uYnRuUHJvcHN9PlxuXHRcdFx0XHRcdFx0PHNwYW4gY2xhc3NOYW1lPVwiYXUtc2VhcmNoX19zdWJtaXQtYnRuLXRleHRcIj57YnRuVGV4dH08L3NwYW4+XG5cdFx0XHRcdDwvQVVidXR0b24+XG5cdFx0XHQ8L2Rpdj5cblx0XHQ8L1dyYXBwZXI+XG4pXG59O1xuXG5BVXNlYXJjaGJveC5wcm9wVHlwZXMgPSB7XG5cdGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRidG5UZXh0OiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRpZDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRkYXJrOiBQcm9wVHlwZXMuYm9vbCxcblx0aWNvbjogUHJvcFR5cGVzLmJvb2wsXG5cdHJlc3BvbnNpdmU6IFByb3BUeXBlcy5ib29sLFxuXHR3cmFwcGVyOiBQcm9wVHlwZXMub25lT2YoWyAnZGl2JywgJ2Zvcm0nIF0pLFxuXHRpbnB1dFByb3BzOiBQcm9wVHlwZXMub2JqZWN0LFxuXHRidG5Qcm9wczogUHJvcFR5cGVzLm9iamVjdFxufTtcblxuQVVzZWFyY2hib3guZGVmYXVsdFByb3BzID0ge1xuXHRjbGFzc05hbWU6ICcnLFxuXHRidG5UZXh0OiAnU2VhcmNoJyxcblx0d3JhcHBlcjogJ2Zvcm0nXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBVXNlYXJjaGJveDtcbiJdfQ==